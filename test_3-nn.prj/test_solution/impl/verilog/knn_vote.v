// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.4
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module knn_vote (
        ap_clk,
        ap_rst,
        knn_set_0_0_0_V_r,
        knn_set_0_0_1_V_r,
        knn_set_0_0_2_V_r,
        knn_set_0_0_3_V_r,
        knn_set_0_1_0_V_r,
        knn_set_0_1_1_V_r,
        knn_set_0_1_2_V_r,
        knn_set_0_1_3_V_r,
        knn_set_0_2_0_V_r,
        knn_set_0_2_1_V_r,
        knn_set_0_2_2_V_r,
        knn_set_0_2_3_V_r,
        knn_set_1_0_0_V_r,
        knn_set_1_0_1_V_r,
        knn_set_1_0_2_V_r,
        knn_set_1_1_0_V_r,
        knn_set_1_1_1_V_r,
        knn_set_1_1_2_V_r,
        knn_set_1_2_0_V_r,
        knn_set_1_2_1_V_r,
        knn_set_1_2_2_V_r,
        knn_set_2_0_0_V_r,
        knn_set_2_0_1_V_r,
        knn_set_2_0_2_V_r,
        knn_set_2_1_0_V_r,
        knn_set_2_1_1_V_r,
        knn_set_2_1_2_V_r,
        knn_set_2_2_0_V_r,
        knn_set_2_2_1_V_r,
        knn_set_2_2_2_V_r,
        ap_return
);


input   ap_clk;
input   ap_rst;
input  [5:0] knn_set_0_0_0_V_r;
input  [5:0] knn_set_0_0_1_V_r;
input  [5:0] knn_set_0_0_2_V_r;
input  [5:0] knn_set_0_0_3_V_r;
input  [5:0] knn_set_0_1_0_V_r;
input  [5:0] knn_set_0_1_1_V_r;
input  [5:0] knn_set_0_1_2_V_r;
input  [5:0] knn_set_0_1_3_V_r;
input  [5:0] knn_set_0_2_0_V_r;
input  [5:0] knn_set_0_2_1_V_r;
input  [5:0] knn_set_0_2_2_V_r;
input  [5:0] knn_set_0_2_3_V_r;
input  [5:0] knn_set_1_0_0_V_r;
input  [5:0] knn_set_1_0_1_V_r;
input  [5:0] knn_set_1_0_2_V_r;
input  [5:0] knn_set_1_1_0_V_r;
input  [5:0] knn_set_1_1_1_V_r;
input  [5:0] knn_set_1_1_2_V_r;
input  [5:0] knn_set_1_2_0_V_r;
input  [5:0] knn_set_1_2_1_V_r;
input  [5:0] knn_set_1_2_2_V_r;
input  [5:0] knn_set_2_0_0_V_r;
input  [5:0] knn_set_2_0_1_V_r;
input  [5:0] knn_set_2_0_2_V_r;
input  [5:0] knn_set_2_1_0_V_r;
input  [5:0] knn_set_2_1_1_V_r;
input  [5:0] knn_set_2_1_2_V_r;
input  [5:0] knn_set_2_2_0_V_r;
input  [5:0] knn_set_2_2_1_V_r;
input  [5:0] knn_set_2_2_2_V_r;
output  [3:0] ap_return;

wire   [7:0] sum_distances_1_min_s_fu_304_p3;
reg   [7:0] sum_distances_1_min_s_reg_752;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_pp0_stage0_11001;
wire   [7:0] sum_distances_1_2_fu_334_p2;
reg   [7:0] sum_distances_1_2_reg_757;
wire   [0:0] tmp_8_1_fu_340_p2;
reg   [0:0] tmp_8_1_reg_762;
wire   [7:0] sum_distances_2_2_fu_368_p2;
reg   [7:0] sum_distances_2_2_reg_768;
wire   [7:0] sum_distances_3_2_fu_396_p2;
reg   [7:0] sum_distances_3_2_reg_774;
wire   [7:0] sum_distances_4_2_fu_424_p2;
reg   [7:0] sum_distances_4_2_reg_780;
reg   [7:0] ap_reg_pp0_iter1_sum_distances_4_2_reg_780;
wire   [7:0] sum_distances_5_2_fu_452_p2;
reg   [7:0] sum_distances_5_2_reg_786;
reg   [7:0] ap_reg_pp0_iter1_sum_distances_5_2_reg_786;
wire   [7:0] sum_distances_6_2_fu_480_p2;
reg   [7:0] sum_distances_6_2_reg_792;
reg   [7:0] ap_reg_pp0_iter1_sum_distances_6_2_reg_792;
reg   [7:0] ap_reg_pp0_iter2_sum_distances_6_2_reg_792;
wire   [7:0] sum_distances_7_2_fu_508_p2;
reg   [7:0] sum_distances_7_2_reg_798;
reg   [7:0] ap_reg_pp0_iter1_sum_distances_7_2_reg_798;
reg   [7:0] ap_reg_pp0_iter2_sum_distances_7_2_reg_798;
wire   [7:0] sum_distances_8_2_fu_536_p2;
reg   [7:0] sum_distances_8_2_reg_804;
reg   [7:0] ap_reg_pp0_iter1_sum_distances_8_2_reg_804;
reg   [7:0] ap_reg_pp0_iter2_sum_distances_8_2_reg_804;
wire   [7:0] sum_distances_9_2_fu_564_p2;
reg   [7:0] sum_distances_9_2_reg_810;
reg   [7:0] ap_reg_pp0_iter1_sum_distances_9_2_reg_810;
reg   [7:0] ap_reg_pp0_iter2_sum_distances_9_2_reg_810;
wire   [7:0] sum_distances_1_min_3_fu_592_p3;
reg   [7:0] sum_distances_1_min_3_reg_815;
wire   [1:0] tmp_7_fu_616_p3;
reg   [1:0] tmp_7_reg_821;
wire   [7:0] sum_distances_1_min_5_fu_639_p3;
reg   [7:0] sum_distances_1_min_5_reg_826;
wire   [0:0] tmp_8_6_fu_646_p2;
reg   [0:0] tmp_8_6_reg_831;
wire   [2:0] tmp_2_fu_668_p3;
reg   [2:0] tmp_2_reg_837;
wire   [0:0] tmp_8_8_fu_693_p2;
reg   [0:0] tmp_8_8_reg_842;
wire   [0:0] tmp_8_9_fu_705_p2;
reg   [0:0] tmp_8_9_reg_847;
wire   [2:0] tmp_3_fu_723_p3;
reg   [2:0] tmp_3_reg_853;
wire    ap_block_pp0_stage0;
wire   [6:0] tmp_1_0_2_cast_fu_278_p1;
wire   [6:0] tmp_1_cast_fu_270_p1;
wire   [6:0] tmp30_fu_282_p2;
wire   [7:0] tmp_1_0_1_cast_fu_274_p1;
wire   [7:0] tmp30_cast_fu_288_p1;
wire   [7:0] sum_distances_0_2_fu_292_p2;
wire   [0:0] tmp_8_fu_298_p2;
wire   [6:0] tmp_1_1_2_cast_fu_320_p1;
wire   [6:0] tmp_1_1_cast_fu_312_p1;
wire   [6:0] tmp31_fu_324_p2;
wire   [7:0] tmp_1_1_1_cast_fu_316_p1;
wire   [7:0] tmp31_cast_fu_330_p1;
wire   [6:0] tmp_1_2_2_cast_fu_354_p1;
wire   [6:0] tmp_1_2_cast_fu_346_p1;
wire   [6:0] tmp32_fu_358_p2;
wire   [7:0] tmp_1_2_1_cast_fu_350_p1;
wire   [7:0] tmp32_cast_fu_364_p1;
wire   [6:0] tmp_1_3_2_cast_fu_382_p1;
wire   [6:0] tmp_1_3_cast_fu_374_p1;
wire   [6:0] tmp33_fu_386_p2;
wire   [7:0] tmp_1_3_1_cast_fu_378_p1;
wire   [7:0] tmp33_cast_fu_392_p1;
wire   [6:0] tmp_1_4_2_cast_fu_410_p1;
wire   [6:0] tmp_1_4_cast_fu_402_p1;
wire   [6:0] tmp34_fu_414_p2;
wire   [7:0] tmp_1_4_1_cast_fu_406_p1;
wire   [7:0] tmp34_cast_fu_420_p1;
wire   [6:0] tmp_1_5_2_cast_fu_438_p1;
wire   [6:0] tmp_1_5_cast_fu_430_p1;
wire   [6:0] tmp35_fu_442_p2;
wire   [7:0] tmp_1_5_1_cast_fu_434_p1;
wire   [7:0] tmp35_cast_fu_448_p1;
wire   [6:0] tmp_1_6_2_cast_fu_466_p1;
wire   [6:0] tmp_1_6_cast_fu_458_p1;
wire   [6:0] tmp36_fu_470_p2;
wire   [7:0] tmp_1_6_1_cast_fu_462_p1;
wire   [7:0] tmp36_cast_fu_476_p1;
wire   [6:0] tmp_1_7_2_cast_fu_494_p1;
wire   [6:0] tmp_1_7_cast_fu_486_p1;
wire   [6:0] tmp37_fu_498_p2;
wire   [7:0] tmp_1_7_1_cast_fu_490_p1;
wire   [7:0] tmp37_cast_fu_504_p1;
wire   [6:0] tmp_1_8_2_cast_fu_522_p1;
wire   [6:0] tmp_1_8_cast_fu_514_p1;
wire   [6:0] tmp38_fu_526_p2;
wire   [7:0] tmp_1_8_1_cast_fu_518_p1;
wire   [7:0] tmp38_cast_fu_532_p1;
wire   [6:0] tmp_1_9_2_cast_fu_550_p1;
wire   [6:0] tmp_1_9_cast_fu_542_p1;
wire   [6:0] tmp39_fu_554_p2;
wire   [7:0] tmp_1_9_1_cast_fu_546_p1;
wire   [7:0] tmp39_cast_fu_560_p1;
wire   [7:0] sum_distances_1_min_1_fu_570_p3;
wire   [0:0] tmp_8_2_fu_575_p2;
wire   [7:0] sum_distances_1_min_2_fu_580_p3;
wire   [0:0] tmp_8_3_fu_587_p2;
wire   [0:0] tmp_6_fu_610_p2;
wire   [1:0] tmp_5_fu_602_p3;
wire   [1:0] tmp_cast_fu_599_p1;
wire   [0:0] tmp_8_4_fu_624_p2;
wire   [7:0] sum_distances_1_min_4_fu_628_p3;
wire   [0:0] tmp_8_5_fu_634_p2;
wire   [0:0] tmp_s_fu_662_p2;
wire   [2:0] tmp_9_fu_654_p3;
wire   [2:0] tmp_7_cast_fu_651_p1;
wire   [7:0] sum_distances_1_min_6_fu_676_p3;
wire   [0:0] tmp_8_7_fu_681_p2;
wire   [7:0] sum_distances_1_min_7_fu_686_p3;
wire   [7:0] sum_distances_1_min_8_fu_698_p3;
wire   [0:0] tmp_4_fu_718_p2;
wire   [2:0] tmp_3_cast_cast_fu_710_p3;
wire   [0:0] tmp_10_fu_740_p2;
wire   [3:0] tmp_1_fu_733_p3;
wire   [3:0] tmp_10_cast_fu_730_p1;
reg   [5:0] knn_set_0_0_0_V_r_int_reg;
reg   [5:0] knn_set_0_0_1_V_r_int_reg;
reg   [5:0] knn_set_0_0_2_V_r_int_reg;
reg   [5:0] knn_set_0_0_3_V_r_int_reg;
reg   [5:0] knn_set_0_1_0_V_r_int_reg;
reg   [5:0] knn_set_0_1_1_V_r_int_reg;
reg   [5:0] knn_set_0_1_2_V_r_int_reg;
reg   [5:0] knn_set_0_1_3_V_r_int_reg;
reg   [5:0] knn_set_0_2_0_V_r_int_reg;
reg   [5:0] knn_set_0_2_1_V_r_int_reg;
reg   [5:0] knn_set_0_2_2_V_r_int_reg;
reg   [5:0] knn_set_0_2_3_V_r_int_reg;
reg   [5:0] knn_set_1_0_0_V_r_int_reg;
reg   [5:0] knn_set_1_0_1_V_r_int_reg;
reg   [5:0] knn_set_1_0_2_V_r_int_reg;
reg   [5:0] knn_set_1_1_0_V_r_int_reg;
reg   [5:0] knn_set_1_1_1_V_r_int_reg;
reg   [5:0] knn_set_1_1_2_V_r_int_reg;
reg   [5:0] knn_set_1_2_0_V_r_int_reg;
reg   [5:0] knn_set_1_2_1_V_r_int_reg;
reg   [5:0] knn_set_1_2_2_V_r_int_reg;
reg   [5:0] knn_set_2_0_0_V_r_int_reg;
reg   [5:0] knn_set_2_0_1_V_r_int_reg;
reg   [5:0] knn_set_2_0_2_V_r_int_reg;
reg   [5:0] knn_set_2_1_0_V_r_int_reg;
reg   [5:0] knn_set_2_1_1_V_r_int_reg;
reg   [5:0] knn_set_2_1_2_V_r_int_reg;
reg   [5:0] knn_set_2_2_0_V_r_int_reg;
reg   [5:0] knn_set_2_2_1_V_r_int_reg;
reg   [5:0] knn_set_2_2_2_V_r_int_reg;

always @ (posedge ap_clk) begin
    knn_set_0_0_0_V_r_int_reg <= knn_set_0_0_0_V_r;
end

always @ (posedge ap_clk) begin
    knn_set_0_0_1_V_r_int_reg <= knn_set_0_0_1_V_r;
end

always @ (posedge ap_clk) begin
    knn_set_0_0_2_V_r_int_reg <= knn_set_0_0_2_V_r;
end

always @ (posedge ap_clk) begin
    knn_set_0_0_3_V_r_int_reg <= knn_set_0_0_3_V_r;
end

always @ (posedge ap_clk) begin
    knn_set_0_1_0_V_r_int_reg <= knn_set_0_1_0_V_r;
end

always @ (posedge ap_clk) begin
    knn_set_0_1_1_V_r_int_reg <= knn_set_0_1_1_V_r;
end

always @ (posedge ap_clk) begin
    knn_set_0_1_2_V_r_int_reg <= knn_set_0_1_2_V_r;
end

always @ (posedge ap_clk) begin
    knn_set_0_1_3_V_r_int_reg <= knn_set_0_1_3_V_r;
end

always @ (posedge ap_clk) begin
    knn_set_0_2_0_V_r_int_reg <= knn_set_0_2_0_V_r;
end

always @ (posedge ap_clk) begin
    knn_set_0_2_1_V_r_int_reg <= knn_set_0_2_1_V_r;
end

always @ (posedge ap_clk) begin
    knn_set_0_2_2_V_r_int_reg <= knn_set_0_2_2_V_r;
end

always @ (posedge ap_clk) begin
    knn_set_0_2_3_V_r_int_reg <= knn_set_0_2_3_V_r;
end

always @ (posedge ap_clk) begin
    knn_set_1_0_0_V_r_int_reg <= knn_set_1_0_0_V_r;
end

always @ (posedge ap_clk) begin
    knn_set_1_0_1_V_r_int_reg <= knn_set_1_0_1_V_r;
end

always @ (posedge ap_clk) begin
    knn_set_1_0_2_V_r_int_reg <= knn_set_1_0_2_V_r;
end

always @ (posedge ap_clk) begin
    knn_set_1_1_0_V_r_int_reg <= knn_set_1_1_0_V_r;
end

always @ (posedge ap_clk) begin
    knn_set_1_1_1_V_r_int_reg <= knn_set_1_1_1_V_r;
end

always @ (posedge ap_clk) begin
    knn_set_1_1_2_V_r_int_reg <= knn_set_1_1_2_V_r;
end

always @ (posedge ap_clk) begin
    knn_set_1_2_0_V_r_int_reg <= knn_set_1_2_0_V_r;
end

always @ (posedge ap_clk) begin
    knn_set_1_2_1_V_r_int_reg <= knn_set_1_2_1_V_r;
end

always @ (posedge ap_clk) begin
    knn_set_1_2_2_V_r_int_reg <= knn_set_1_2_2_V_r;
end

always @ (posedge ap_clk) begin
    knn_set_2_0_0_V_r_int_reg <= knn_set_2_0_0_V_r;
end

always @ (posedge ap_clk) begin
    knn_set_2_0_1_V_r_int_reg <= knn_set_2_0_1_V_r;
end

always @ (posedge ap_clk) begin
    knn_set_2_0_2_V_r_int_reg <= knn_set_2_0_2_V_r;
end

always @ (posedge ap_clk) begin
    knn_set_2_1_0_V_r_int_reg <= knn_set_2_1_0_V_r;
end

always @ (posedge ap_clk) begin
    knn_set_2_1_1_V_r_int_reg <= knn_set_2_1_1_V_r;
end

always @ (posedge ap_clk) begin
    knn_set_2_1_2_V_r_int_reg <= knn_set_2_1_2_V_r;
end

always @ (posedge ap_clk) begin
    knn_set_2_2_0_V_r_int_reg <= knn_set_2_2_0_V_r;
end

always @ (posedge ap_clk) begin
    knn_set_2_2_1_V_r_int_reg <= knn_set_2_2_1_V_r;
end

always @ (posedge ap_clk) begin
    knn_set_2_2_2_V_r_int_reg <= knn_set_2_2_2_V_r;
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        ap_reg_pp0_iter1_sum_distances_4_2_reg_780 <= sum_distances_4_2_reg_780;
        ap_reg_pp0_iter1_sum_distances_5_2_reg_786 <= sum_distances_5_2_reg_786;
        ap_reg_pp0_iter1_sum_distances_6_2_reg_792 <= sum_distances_6_2_reg_792;
        ap_reg_pp0_iter1_sum_distances_7_2_reg_798 <= sum_distances_7_2_reg_798;
        ap_reg_pp0_iter1_sum_distances_8_2_reg_804 <= sum_distances_8_2_reg_804;
        ap_reg_pp0_iter1_sum_distances_9_2_reg_810 <= sum_distances_9_2_reg_810;
        ap_reg_pp0_iter2_sum_distances_6_2_reg_792 <= ap_reg_pp0_iter1_sum_distances_6_2_reg_792;
        ap_reg_pp0_iter2_sum_distances_7_2_reg_798 <= ap_reg_pp0_iter1_sum_distances_7_2_reg_798;
        ap_reg_pp0_iter2_sum_distances_8_2_reg_804 <= ap_reg_pp0_iter1_sum_distances_8_2_reg_804;
        ap_reg_pp0_iter2_sum_distances_9_2_reg_810 <= ap_reg_pp0_iter1_sum_distances_9_2_reg_810;
        sum_distances_1_2_reg_757 <= sum_distances_1_2_fu_334_p2;
        sum_distances_1_min_3_reg_815 <= sum_distances_1_min_3_fu_592_p3;
        sum_distances_1_min_5_reg_826 <= sum_distances_1_min_5_fu_639_p3;
        sum_distances_1_min_s_reg_752 <= sum_distances_1_min_s_fu_304_p3;
        sum_distances_2_2_reg_768 <= sum_distances_2_2_fu_368_p2;
        sum_distances_3_2_reg_774 <= sum_distances_3_2_fu_396_p2;
        sum_distances_4_2_reg_780 <= sum_distances_4_2_fu_424_p2;
        sum_distances_5_2_reg_786 <= sum_distances_5_2_fu_452_p2;
        sum_distances_6_2_reg_792 <= sum_distances_6_2_fu_480_p2;
        sum_distances_7_2_reg_798 <= sum_distances_7_2_fu_508_p2;
        sum_distances_8_2_reg_804 <= sum_distances_8_2_fu_536_p2;
        sum_distances_9_2_reg_810 <= sum_distances_9_2_fu_564_p2;
        tmp_2_reg_837 <= tmp_2_fu_668_p3;
        tmp_3_reg_853 <= tmp_3_fu_723_p3;
        tmp_7_reg_821 <= tmp_7_fu_616_p3;
        tmp_8_1_reg_762 <= tmp_8_1_fu_340_p2;
        tmp_8_6_reg_831 <= tmp_8_6_fu_646_p2;
        tmp_8_8_reg_842 <= tmp_8_8_fu_693_p2;
        tmp_8_9_reg_847 <= tmp_8_9_fu_705_p2;
    end
end

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_return = ((tmp_10_fu_740_p2[0:0] === 1'b1) ? tmp_1_fu_733_p3 : tmp_10_cast_fu_730_p1);

assign sum_distances_0_2_fu_292_p2 = (tmp_1_0_1_cast_fu_274_p1 + tmp30_cast_fu_288_p1);

assign sum_distances_1_2_fu_334_p2 = (tmp_1_1_1_cast_fu_316_p1 + tmp31_cast_fu_330_p1);

assign sum_distances_1_min_1_fu_570_p3 = ((tmp_8_1_reg_762[0:0] === 1'b1) ? sum_distances_1_2_reg_757 : sum_distances_1_min_s_reg_752);

assign sum_distances_1_min_2_fu_580_p3 = ((tmp_8_2_fu_575_p2[0:0] === 1'b1) ? sum_distances_2_2_reg_768 : sum_distances_1_min_1_fu_570_p3);

assign sum_distances_1_min_3_fu_592_p3 = ((tmp_8_3_fu_587_p2[0:0] === 1'b1) ? sum_distances_3_2_reg_774 : sum_distances_1_min_2_fu_580_p3);

assign sum_distances_1_min_4_fu_628_p3 = ((tmp_8_4_fu_624_p2[0:0] === 1'b1) ? ap_reg_pp0_iter1_sum_distances_4_2_reg_780 : sum_distances_1_min_3_reg_815);

assign sum_distances_1_min_5_fu_639_p3 = ((tmp_8_5_fu_634_p2[0:0] === 1'b1) ? ap_reg_pp0_iter1_sum_distances_5_2_reg_786 : sum_distances_1_min_4_fu_628_p3);

assign sum_distances_1_min_6_fu_676_p3 = ((tmp_8_6_reg_831[0:0] === 1'b1) ? ap_reg_pp0_iter2_sum_distances_6_2_reg_792 : sum_distances_1_min_5_reg_826);

assign sum_distances_1_min_7_fu_686_p3 = ((tmp_8_7_fu_681_p2[0:0] === 1'b1) ? ap_reg_pp0_iter2_sum_distances_7_2_reg_798 : sum_distances_1_min_6_fu_676_p3);

assign sum_distances_1_min_8_fu_698_p3 = ((tmp_8_8_fu_693_p2[0:0] === 1'b1) ? ap_reg_pp0_iter2_sum_distances_8_2_reg_804 : sum_distances_1_min_7_fu_686_p3);

assign sum_distances_1_min_s_fu_304_p3 = ((tmp_8_fu_298_p2[0:0] === 1'b1) ? sum_distances_0_2_fu_292_p2 : 8'd150);

assign sum_distances_2_2_fu_368_p2 = (tmp_1_2_1_cast_fu_350_p1 + tmp32_cast_fu_364_p1);

assign sum_distances_3_2_fu_396_p2 = (tmp_1_3_1_cast_fu_378_p1 + tmp33_cast_fu_392_p1);

assign sum_distances_4_2_fu_424_p2 = (tmp_1_4_1_cast_fu_406_p1 + tmp34_cast_fu_420_p1);

assign sum_distances_5_2_fu_452_p2 = (tmp_1_5_1_cast_fu_434_p1 + tmp35_cast_fu_448_p1);

assign sum_distances_6_2_fu_480_p2 = (tmp_1_6_1_cast_fu_462_p1 + tmp36_cast_fu_476_p1);

assign sum_distances_7_2_fu_508_p2 = (tmp_1_7_1_cast_fu_490_p1 + tmp37_cast_fu_504_p1);

assign sum_distances_8_2_fu_536_p2 = (tmp_1_8_1_cast_fu_518_p1 + tmp38_cast_fu_532_p1);

assign sum_distances_9_2_fu_564_p2 = (tmp_1_9_1_cast_fu_546_p1 + tmp39_cast_fu_560_p1);

assign tmp30_cast_fu_288_p1 = tmp30_fu_282_p2;

assign tmp30_fu_282_p2 = (tmp_1_0_2_cast_fu_278_p1 + tmp_1_cast_fu_270_p1);

assign tmp31_cast_fu_330_p1 = tmp31_fu_324_p2;

assign tmp31_fu_324_p2 = (tmp_1_1_2_cast_fu_320_p1 + tmp_1_1_cast_fu_312_p1);

assign tmp32_cast_fu_364_p1 = tmp32_fu_358_p2;

assign tmp32_fu_358_p2 = (tmp_1_2_2_cast_fu_354_p1 + tmp_1_2_cast_fu_346_p1);

assign tmp33_cast_fu_392_p1 = tmp33_fu_386_p2;

assign tmp33_fu_386_p2 = (tmp_1_3_2_cast_fu_382_p1 + tmp_1_3_cast_fu_374_p1);

assign tmp34_cast_fu_420_p1 = tmp34_fu_414_p2;

assign tmp34_fu_414_p2 = (tmp_1_4_2_cast_fu_410_p1 + tmp_1_4_cast_fu_402_p1);

assign tmp35_cast_fu_448_p1 = tmp35_fu_442_p2;

assign tmp35_fu_442_p2 = (tmp_1_5_2_cast_fu_438_p1 + tmp_1_5_cast_fu_430_p1);

assign tmp36_cast_fu_476_p1 = tmp36_fu_470_p2;

assign tmp36_fu_470_p2 = (tmp_1_6_2_cast_fu_466_p1 + tmp_1_6_cast_fu_458_p1);

assign tmp37_cast_fu_504_p1 = tmp37_fu_498_p2;

assign tmp37_fu_498_p2 = (tmp_1_7_2_cast_fu_494_p1 + tmp_1_7_cast_fu_486_p1);

assign tmp38_cast_fu_532_p1 = tmp38_fu_526_p2;

assign tmp38_fu_526_p2 = (tmp_1_8_2_cast_fu_522_p1 + tmp_1_8_cast_fu_514_p1);

assign tmp39_cast_fu_560_p1 = tmp39_fu_554_p2;

assign tmp39_fu_554_p2 = (tmp_1_9_2_cast_fu_550_p1 + tmp_1_9_cast_fu_542_p1);

assign tmp_10_cast_fu_730_p1 = tmp_3_reg_853;

assign tmp_10_fu_740_p2 = (tmp_8_9_reg_847 | tmp_8_8_reg_842);

assign tmp_1_0_1_cast_fu_274_p1 = knn_set_0_1_0_V_r_int_reg;

assign tmp_1_0_2_cast_fu_278_p1 = knn_set_0_2_0_V_r_int_reg;

assign tmp_1_1_1_cast_fu_316_p1 = knn_set_1_1_0_V_r_int_reg;

assign tmp_1_1_2_cast_fu_320_p1 = knn_set_1_2_0_V_r_int_reg;

assign tmp_1_1_cast_fu_312_p1 = knn_set_1_0_0_V_r_int_reg;

assign tmp_1_2_1_cast_fu_350_p1 = knn_set_2_1_0_V_r_int_reg;

assign tmp_1_2_2_cast_fu_354_p1 = knn_set_2_2_0_V_r_int_reg;

assign tmp_1_2_cast_fu_346_p1 = knn_set_2_0_0_V_r_int_reg;

assign tmp_1_3_1_cast_fu_378_p1 = knn_set_0_1_1_V_r_int_reg;

assign tmp_1_3_2_cast_fu_382_p1 = knn_set_0_2_1_V_r_int_reg;

assign tmp_1_3_cast_fu_374_p1 = knn_set_0_0_1_V_r_int_reg;

assign tmp_1_4_1_cast_fu_406_p1 = knn_set_1_1_1_V_r_int_reg;

assign tmp_1_4_2_cast_fu_410_p1 = knn_set_1_2_1_V_r_int_reg;

assign tmp_1_4_cast_fu_402_p1 = knn_set_1_0_1_V_r_int_reg;

assign tmp_1_5_1_cast_fu_434_p1 = knn_set_2_1_1_V_r_int_reg;

assign tmp_1_5_2_cast_fu_438_p1 = knn_set_2_2_1_V_r_int_reg;

assign tmp_1_5_cast_fu_430_p1 = knn_set_2_0_1_V_r_int_reg;

assign tmp_1_6_1_cast_fu_462_p1 = knn_set_0_1_2_V_r_int_reg;

assign tmp_1_6_2_cast_fu_466_p1 = knn_set_0_2_2_V_r_int_reg;

assign tmp_1_6_cast_fu_458_p1 = knn_set_0_0_2_V_r_int_reg;

assign tmp_1_7_1_cast_fu_490_p1 = knn_set_1_1_2_V_r_int_reg;

assign tmp_1_7_2_cast_fu_494_p1 = knn_set_1_2_2_V_r_int_reg;

assign tmp_1_7_cast_fu_486_p1 = knn_set_1_0_2_V_r_int_reg;

assign tmp_1_8_1_cast_fu_518_p1 = knn_set_2_1_2_V_r_int_reg;

assign tmp_1_8_2_cast_fu_522_p1 = knn_set_2_2_2_V_r_int_reg;

assign tmp_1_8_cast_fu_514_p1 = knn_set_2_0_2_V_r_int_reg;

assign tmp_1_9_1_cast_fu_546_p1 = knn_set_0_1_3_V_r_int_reg;

assign tmp_1_9_2_cast_fu_550_p1 = knn_set_0_2_3_V_r_int_reg;

assign tmp_1_9_cast_fu_542_p1 = knn_set_0_0_3_V_r_int_reg;

assign tmp_1_cast_fu_270_p1 = knn_set_0_0_0_V_r_int_reg;

assign tmp_1_fu_733_p3 = ((tmp_8_9_reg_847[0:0] === 1'b1) ? 4'd9 : 4'd8);

assign tmp_2_fu_668_p3 = ((tmp_s_fu_662_p2[0:0] === 1'b1) ? tmp_9_fu_654_p3 : tmp_7_cast_fu_651_p1);

assign tmp_3_cast_cast_fu_710_p3 = ((tmp_8_7_fu_681_p2[0:0] === 1'b1) ? 3'd7 : 3'd6);

assign tmp_3_fu_723_p3 = ((tmp_4_fu_718_p2[0:0] === 1'b1) ? tmp_3_cast_cast_fu_710_p3 : tmp_2_reg_837);

assign tmp_4_fu_718_p2 = (tmp_8_7_fu_681_p2 | tmp_8_6_reg_831);

assign tmp_5_fu_602_p3 = ((tmp_8_3_fu_587_p2[0:0] === 1'b1) ? 2'd3 : 2'd2);

assign tmp_6_fu_610_p2 = (tmp_8_3_fu_587_p2 | tmp_8_2_fu_575_p2);

assign tmp_7_cast_fu_651_p1 = tmp_7_reg_821;

assign tmp_7_fu_616_p3 = ((tmp_6_fu_610_p2[0:0] === 1'b1) ? tmp_5_fu_602_p3 : tmp_cast_fu_599_p1);

assign tmp_8_1_fu_340_p2 = ((sum_distances_1_2_fu_334_p2 < sum_distances_1_min_s_fu_304_p3) ? 1'b1 : 1'b0);

assign tmp_8_2_fu_575_p2 = ((sum_distances_2_2_reg_768 < sum_distances_1_min_1_fu_570_p3) ? 1'b1 : 1'b0);

assign tmp_8_3_fu_587_p2 = ((sum_distances_3_2_reg_774 < sum_distances_1_min_2_fu_580_p3) ? 1'b1 : 1'b0);

assign tmp_8_4_fu_624_p2 = ((ap_reg_pp0_iter1_sum_distances_4_2_reg_780 < sum_distances_1_min_3_reg_815) ? 1'b1 : 1'b0);

assign tmp_8_5_fu_634_p2 = ((ap_reg_pp0_iter1_sum_distances_5_2_reg_786 < sum_distances_1_min_4_fu_628_p3) ? 1'b1 : 1'b0);

assign tmp_8_6_fu_646_p2 = ((ap_reg_pp0_iter1_sum_distances_6_2_reg_792 < sum_distances_1_min_5_fu_639_p3) ? 1'b1 : 1'b0);

assign tmp_8_7_fu_681_p2 = ((ap_reg_pp0_iter2_sum_distances_7_2_reg_798 < sum_distances_1_min_6_fu_676_p3) ? 1'b1 : 1'b0);

assign tmp_8_8_fu_693_p2 = ((ap_reg_pp0_iter2_sum_distances_8_2_reg_804 < sum_distances_1_min_7_fu_686_p3) ? 1'b1 : 1'b0);

assign tmp_8_9_fu_705_p2 = ((ap_reg_pp0_iter2_sum_distances_9_2_reg_810 < sum_distances_1_min_8_fu_698_p3) ? 1'b1 : 1'b0);

assign tmp_8_fu_298_p2 = ((sum_distances_0_2_fu_292_p2 < 8'd150) ? 1'b1 : 1'b0);

assign tmp_9_fu_654_p3 = ((tmp_8_5_fu_634_p2[0:0] === 1'b1) ? 3'd5 : 3'd4);

assign tmp_cast_fu_599_p1 = tmp_8_1_reg_762;

assign tmp_s_fu_662_p2 = (tmp_8_5_fu_634_p2 | tmp_8_4_fu_624_p2);

endmodule //knn_vote
