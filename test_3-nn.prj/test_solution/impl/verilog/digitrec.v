// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.4
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="digitrec,hls_ip_2017_4,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xc7z020clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.750000,HLS_SYN_LAT=32487,HLS_SYN_TPT=none,HLS_SYN_MEM=192,HLS_SYN_DSP=0,HLS_SYN_FF=1978,HLS_SYN_LUT=5695}" *)

module digitrec (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        input_V,
        ap_return
);

parameter    ap_ST_fsm_state1 = 27'd1;
parameter    ap_ST_fsm_state2 = 27'd2;
parameter    ap_ST_fsm_state3 = 27'd4;
parameter    ap_ST_fsm_state4 = 27'd8;
parameter    ap_ST_fsm_state5 = 27'd16;
parameter    ap_ST_fsm_state6 = 27'd32;
parameter    ap_ST_fsm_state7 = 27'd64;
parameter    ap_ST_fsm_state8 = 27'd128;
parameter    ap_ST_fsm_state9 = 27'd256;
parameter    ap_ST_fsm_state10 = 27'd512;
parameter    ap_ST_fsm_state11 = 27'd1024;
parameter    ap_ST_fsm_state12 = 27'd2048;
parameter    ap_ST_fsm_state13 = 27'd4096;
parameter    ap_ST_fsm_state14 = 27'd8192;
parameter    ap_ST_fsm_state15 = 27'd16384;
parameter    ap_ST_fsm_state16 = 27'd32768;
parameter    ap_ST_fsm_state17 = 27'd65536;
parameter    ap_ST_fsm_state18 = 27'd131072;
parameter    ap_ST_fsm_state19 = 27'd262144;
parameter    ap_ST_fsm_state20 = 27'd524288;
parameter    ap_ST_fsm_state21 = 27'd1048576;
parameter    ap_ST_fsm_state22 = 27'd2097152;
parameter    ap_ST_fsm_state23 = 27'd4194304;
parameter    ap_ST_fsm_state24 = 27'd8388608;
parameter    ap_ST_fsm_state25 = 27'd16777216;
parameter    ap_ST_fsm_state26 = 27'd33554432;
parameter    ap_ST_fsm_state27 = 27'd67108864;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [48:0] input_V;
output  [3:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;

(* fsm_encoding = "none" *) reg   [26:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [14:0] training_data_V_address0;
reg    training_data_V_ce0;
wire   [47:0] training_data_V_q0;
reg   [14:0] training_data_V_address1;
reg    training_data_V_ce1;
wire   [47:0] training_data_V_q1;
reg   [14:0] training_data_V_address2;
reg    training_data_V_ce2;
wire   [47:0] training_data_V_q2;
reg   [47:0] reg_1029;
wire    ap_CS_fsm_state6;
wire    ap_CS_fsm_state10;
wire    ap_CS_fsm_state14;
wire    ap_CS_fsm_state18;
reg   [47:0] reg_1034;
wire    ap_CS_fsm_state8;
reg   [47:0] reg_1040;
reg   [5:0] reg_1046;
wire    ap_CS_fsm_state12;
reg   [5:0] reg_1052;
reg   [5:0] reg_1058;
reg   [5:0] reg_1064;
reg   [5:0] reg_1070;
reg   [5:0] reg_1076;
reg   [5:0] reg_1082;
reg   [5:0] reg_1088;
reg   [5:0] reg_1094;
reg   [5:0] reg_1100;
reg   [5:0] reg_1106;
reg   [5:0] reg_1112;
reg   [5:0] reg_1118;
reg   [5:0] reg_1124;
reg   [5:0] reg_1130;
reg   [5:0] reg_1136;
reg   [5:0] reg_1142;
reg   [5:0] reg_1148;
reg   [5:0] reg_1154;
reg   [5:0] reg_1159;
reg   [5:0] reg_1164;
reg   [5:0] reg_1169;
reg   [5:0] reg_1174;
reg   [5:0] reg_1179;
reg   [5:0] reg_1184;
reg   [5:0] reg_1189;
reg   [5:0] reg_1194;
reg   [5:0] reg_1199;
reg   [5:0] reg_1204;
reg   [5:0] reg_1209;
wire    ap_CS_fsm_state2;
wire   [7:0] next_mul_fu_1214_p2;
reg   [7:0] next_mul_reg_2288;
wire   [3:0] i_1_fu_1226_p2;
reg   [3:0] i_1_reg_2296;
wire   [2:0] tmp_fu_1232_p1;
reg   [2:0] tmp_reg_2301;
wire   [0:0] exitcond1_fu_1220_p2;
reg   [1:0] newIndex_t_reg_2305;
wire   [1:0] k_1_fu_1252_p2;
reg   [1:0] k_1_reg_2342;
wire    ap_CS_fsm_state3;
wire   [3:0] idx_urem_fu_1810_p3;
wire   [0:0] exitcond3_fu_1246_p2;
wire   [14:0] i4_cast1_fu_1818_p1;
reg   [14:0] i4_cast1_reg_2352;
wire    ap_CS_fsm_state5;
wire   [13:0] i4_cast2_fu_1822_p1;
reg   [13:0] i4_cast2_reg_2357;
wire   [11:0] i4_cast225_cast1_fu_1826_p1;
reg   [11:0] i4_cast225_cast1_reg_2364;
wire   [12:0] i4_cast225_cast_fu_1830_p1;
reg   [12:0] i4_cast225_cast_reg_2369;
wire   [10:0] i_2_fu_1840_p2;
reg   [10:0] i_2_reg_2378;
wire   [0:0] exitcond2_fu_1834_p2;
wire    ap_CS_fsm_state7;
wire    ap_CS_fsm_state9;
wire    ap_CS_fsm_state13;
wire    ap_CS_fsm_state17;
wire    ap_CS_fsm_state22;
reg   [5:0] grp_update_knn_fu_664_min_distances_V_read;
reg   [5:0] grp_update_knn_fu_664_min_distances_V12_read;
reg   [5:0] grp_update_knn_fu_664_min_distances_V2_read;
reg   [5:0] grp_update_knn_fu_664_min_distances_V3_read;
reg   [5:0] grp_update_knn_fu_664_min_distances_V14_read;
reg   [5:0] grp_update_knn_fu_664_min_distances_V15_read;
reg   [5:0] grp_update_knn_fu_664_min_distances_V16_read;
reg   [5:0] grp_update_knn_fu_664_min_distances_V17_read;
reg   [5:0] grp_update_knn_fu_664_min_distances_V28_read;
reg   [5:0] grp_update_knn_fu_664_min_distances_V29_read;
reg   [5:0] grp_update_knn_fu_664_min_distances_V210_read;
reg   [5:0] grp_update_knn_fu_664_min_distances_V211_read;
reg   [3:0] grp_update_knn_fu_664_min_distances_V_offset;
wire   [5:0] grp_update_knn_fu_664_ap_return_0;
wire   [5:0] grp_update_knn_fu_664_ap_return_1;
wire   [5:0] grp_update_knn_fu_664_ap_return_2;
wire   [5:0] grp_update_knn_fu_664_ap_return_3;
wire   [5:0] grp_update_knn_fu_664_ap_return_4;
wire   [5:0] grp_update_knn_fu_664_ap_return_5;
wire   [5:0] grp_update_knn_fu_664_ap_return_6;
wire   [5:0] grp_update_knn_fu_664_ap_return_7;
wire   [5:0] grp_update_knn_fu_664_ap_return_8;
wire   [5:0] grp_update_knn_fu_664_ap_return_9;
wire   [5:0] grp_update_knn_fu_664_ap_return_10;
wire   [5:0] grp_update_knn_fu_664_ap_return_11;
reg    grp_update_knn_fu_664_ap_ce;
wire    ap_CS_fsm_state11;
wire    ap_CS_fsm_state15;
wire    ap_CS_fsm_state19;
wire    ap_CS_fsm_state4;
wire    ap_CS_fsm_state23;
wire    ap_CS_fsm_state24;
wire    ap_CS_fsm_state25;
wire    ap_CS_fsm_state26;
wire    ap_CS_fsm_state27;
reg   [5:0] grp_update_knn_1_fu_699_min_distances_V_read;
reg   [5:0] grp_update_knn_1_fu_699_min_distances_V12_read;
reg   [5:0] grp_update_knn_1_fu_699_min_distances_V2_read;
reg   [5:0] grp_update_knn_1_fu_699_min_distances_V13_read;
reg   [5:0] grp_update_knn_1_fu_699_min_distances_V14_read;
reg   [5:0] grp_update_knn_1_fu_699_min_distances_V15_read;
reg   [5:0] grp_update_knn_1_fu_699_min_distances_V26_read;
reg   [5:0] grp_update_knn_1_fu_699_min_distances_V27_read;
reg   [5:0] grp_update_knn_1_fu_699_min_distances_V28_read;
reg   [3:0] grp_update_knn_1_fu_699_min_distances_V_offset;
wire   [5:0] grp_update_knn_1_fu_699_ap_return_0;
wire   [5:0] grp_update_knn_1_fu_699_ap_return_1;
wire   [5:0] grp_update_knn_1_fu_699_ap_return_2;
wire   [5:0] grp_update_knn_1_fu_699_ap_return_3;
wire   [5:0] grp_update_knn_1_fu_699_ap_return_4;
wire   [5:0] grp_update_knn_1_fu_699_ap_return_5;
wire   [5:0] grp_update_knn_1_fu_699_ap_return_6;
wire   [5:0] grp_update_knn_1_fu_699_ap_return_7;
wire   [5:0] grp_update_knn_1_fu_699_ap_return_8;
reg    grp_update_knn_1_fu_699_ap_ce;
reg   [5:0] grp_update_knn_1_fu_725_min_distances_V_read;
reg   [5:0] grp_update_knn_1_fu_725_min_distances_V12_read;
reg   [5:0] grp_update_knn_1_fu_725_min_distances_V2_read;
reg   [5:0] grp_update_knn_1_fu_725_min_distances_V13_read;
reg   [5:0] grp_update_knn_1_fu_725_min_distances_V14_read;
reg   [5:0] grp_update_knn_1_fu_725_min_distances_V15_read;
reg   [5:0] grp_update_knn_1_fu_725_min_distances_V26_read;
reg   [5:0] grp_update_knn_1_fu_725_min_distances_V27_read;
reg   [5:0] grp_update_knn_1_fu_725_min_distances_V28_read;
reg   [3:0] grp_update_knn_1_fu_725_min_distances_V_offset;
wire   [5:0] grp_update_knn_1_fu_725_ap_return_0;
wire   [5:0] grp_update_knn_1_fu_725_ap_return_1;
wire   [5:0] grp_update_knn_1_fu_725_ap_return_2;
wire   [5:0] grp_update_knn_1_fu_725_ap_return_3;
wire   [5:0] grp_update_knn_1_fu_725_ap_return_4;
wire   [5:0] grp_update_knn_1_fu_725_ap_return_5;
wire   [5:0] grp_update_knn_1_fu_725_ap_return_6;
wire   [5:0] grp_update_knn_1_fu_725_ap_return_7;
wire   [5:0] grp_update_knn_1_fu_725_ap_return_8;
reg    grp_update_knn_1_fu_725_ap_ce;
wire   [3:0] grp_knn_vote_fu_755_ap_return;
reg   [3:0] i_reg_308;
reg   [7:0] phi_mul_reg_319;
reg   [3:0] phi_urem_reg_330;
wire   [1:0] ap_phi_mux_k_phi_fu_346_p4;
reg   [1:0] k_reg_342;
reg   [5:0] knn_set_2_2_2_V_3_reg_353;
reg   [5:0] knn_set_2_2_1_V_3_reg_363;
reg   [5:0] knn_set_2_2_0_V_3_reg_373;
reg   [5:0] knn_set_2_1_2_V_3_reg_383;
reg   [5:0] knn_set_2_1_1_V_3_reg_393;
reg   [5:0] knn_set_2_1_0_V_3_reg_403;
reg   [5:0] knn_set_2_0_2_V_3_reg_413;
reg   [5:0] knn_set_2_0_1_V_3_reg_423;
reg   [5:0] knn_set_2_0_0_V_3_reg_433;
reg   [5:0] knn_set_1_2_2_V_3_reg_443;
reg   [5:0] knn_set_1_2_1_V_3_reg_453;
reg   [5:0] knn_set_1_2_0_V_3_reg_463;
reg   [5:0] knn_set_1_1_2_V_3_reg_473;
reg   [5:0] knn_set_1_1_1_V_3_reg_483;
reg   [5:0] knn_set_1_1_0_V_3_reg_493;
reg   [5:0] knn_set_1_0_2_V_3_reg_503;
reg   [5:0] knn_set_1_0_1_V_3_reg_513;
reg   [5:0] knn_set_1_0_0_V_3_reg_523;
reg   [5:0] knn_set_0_2_3_V_3_reg_533;
reg   [5:0] knn_set_0_2_2_V_3_reg_543;
reg   [5:0] knn_set_0_2_1_V_3_reg_553;
reg   [5:0] knn_set_0_2_0_V_3_reg_563;
reg   [5:0] knn_set_0_1_3_V_3_reg_573;
reg   [5:0] knn_set_0_1_2_V_3_reg_583;
reg   [5:0] knn_set_0_1_1_V_3_reg_593;
reg   [5:0] knn_set_0_1_0_V_3_reg_603;
reg   [5:0] knn_set_0_0_3_V_3_reg_613;
reg   [5:0] knn_set_0_0_2_V_3_reg_623;
reg   [5:0] knn_set_0_0_1_V_3_reg_633;
reg   [5:0] knn_set_0_0_0_V_3_reg_643;
reg   [10:0] i4_reg_653;
wire   [63:0] tmp_4_fu_1846_p1;
wire   [63:0] tmp_4_1_fu_1857_p1;
wire   [63:0] tmp_4_2_fu_1868_p1;
wire   [63:0] tmp_4_4_fu_1878_p1;
wire   [63:0] tmp_4_5_fu_1888_p1;
wire   [63:0] tmp_4_3_fu_1898_p1;
wire   [63:0] tmp_4_7_fu_1912_p1;
wire   [63:0] tmp_4_8_fu_1926_p1;
wire   [63:0] tmp_4_6_fu_1936_p1;
wire   [63:0] tmp_4_9_fu_1946_p1;
reg   [5:0] knn_set_0_0_0_V_fu_92;
wire   [5:0] knn_set_0_0_0_V_5_fu_1492_p6;
reg   [5:0] knn_set_0_0_1_V_fu_96;
wire   [5:0] knn_set_0_0_1_V_5_fu_1505_p6;
reg   [5:0] knn_set_0_0_2_V_fu_100;
wire   [5:0] knn_set_0_0_2_V_5_fu_1518_p6;
reg   [5:0] knn_set_0_0_3_V_fu_104;
wire   [5:0] knn_set_0_0_3_V_5_fu_1531_p6;
reg   [5:0] knn_set_0_1_0_V_fu_108;
wire   [5:0] knn_set_0_1_0_V_5_fu_1420_p6;
reg   [5:0] knn_set_0_1_1_V_fu_112;
wire   [5:0] knn_set_0_1_1_V_5_fu_1433_p6;
reg   [5:0] knn_set_0_1_2_V_fu_116;
wire   [5:0] knn_set_0_1_2_V_5_fu_1446_p6;
reg   [5:0] knn_set_0_1_3_V_fu_120;
wire   [5:0] knn_set_0_1_3_V_5_fu_1459_p6;
reg   [5:0] knn_set_0_2_0_V_fu_124;
wire   [5:0] knn_set_0_2_0_V_5_fu_1564_p6;
reg   [5:0] knn_set_0_2_1_V_fu_128;
wire   [5:0] knn_set_0_2_1_V_5_fu_1577_p6;
reg   [5:0] knn_set_0_2_2_V_fu_132;
wire   [5:0] knn_set_0_2_2_V_5_fu_1590_p6;
reg   [5:0] knn_set_0_2_3_V_fu_136;
wire   [5:0] knn_set_0_2_3_V_5_fu_1603_p6;
reg   [5:0] knn_set_1_0_0_V_fu_140;
wire   [5:0] knn_set_1_0_0_V_5_fu_1312_p6;
reg   [5:0] knn_set_1_0_1_V_fu_144;
wire   [5:0] knn_set_1_0_1_V_5_fu_1325_p6;
reg   [5:0] knn_set_1_0_2_V_fu_148;
wire   [5:0] knn_set_1_0_2_V_5_fu_1338_p6;
reg   [5:0] knn_set_1_1_0_V_fu_152;
wire   [5:0] knn_set_1_1_0_V_5_fu_1258_p6;
reg   [5:0] knn_set_1_1_1_V_fu_156;
wire   [5:0] knn_set_1_1_1_V_5_fu_1271_p6;
reg   [5:0] knn_set_1_1_2_V_fu_160;
wire   [5:0] knn_set_1_1_2_V_5_fu_1284_p6;
reg   [5:0] knn_set_1_2_0_V_fu_164;
wire   [5:0] knn_set_1_2_0_V_5_fu_1366_p6;
reg   [5:0] knn_set_1_2_1_V_fu_168;
wire   [5:0] knn_set_1_2_1_V_5_fu_1379_p6;
reg   [5:0] knn_set_1_2_2_V_fu_172;
wire   [5:0] knn_set_1_2_2_V_5_fu_1392_p6;
reg   [5:0] knn_set_2_0_0_V_fu_176;
wire   [5:0] knn_set_2_0_0_V_5_fu_1690_p6;
reg   [5:0] knn_set_2_0_1_V_fu_180;
wire   [5:0] knn_set_2_0_1_V_5_fu_1703_p6;
reg   [5:0] knn_set_2_0_2_V_fu_184;
wire   [5:0] knn_set_2_0_2_V_5_fu_1716_p6;
reg   [5:0] knn_set_2_1_0_V_fu_188;
wire   [5:0] knn_set_2_1_0_V_5_fu_1636_p6;
reg   [5:0] knn_set_2_1_1_V_fu_192;
wire   [5:0] knn_set_2_1_1_V_5_fu_1649_p6;
reg   [5:0] knn_set_2_1_2_V_fu_196;
wire   [5:0] knn_set_2_1_2_V_5_fu_1662_p6;
reg   [5:0] knn_set_2_2_0_V_fu_200;
wire   [5:0] knn_set_2_2_0_V_5_fu_1744_p6;
reg   [5:0] knn_set_2_2_1_V_fu_204;
wire   [5:0] knn_set_2_2_1_V_5_fu_1757_p6;
reg   [5:0] knn_set_2_2_2_V_fu_208;
wire   [5:0] knn_set_2_2_2_V_5_fu_1770_p6;
wire   [3:0] next_urem_fu_1798_p2;
wire   [0:0] tmp_106_fu_1804_p2;
wire   [11:0] tmp_3_1_fu_1851_p2;
wire   [12:0] tmp_3_2_fu_1862_p2;
wire   [13:0] tmp_3_4_fu_1873_p2;
wire   [13:0] tmp_3_5_fu_1883_p2;
wire   [12:0] tmp_3_3_fu_1893_p2;
wire   [12:0] tmp_3_7_fu_1903_p2;
wire  signed [13:0] tmp_3_7_cast_fu_1908_p1;
wire   [11:0] tmp_3_8_fu_1917_p2;
wire  signed [13:0] tmp_3_8_cast_fu_1922_p1;
wire   [13:0] tmp_3_6_fu_1931_p2;
wire   [14:0] tmp_3_9_fu_1941_p2;
reg   [26:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 27'd1;
end

digitrec_trainingfYi #(
    .DataWidth( 48 ),
    .AddressRange( 18000 ),
    .AddressWidth( 15 ))
training_data_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(training_data_V_address0),
    .ce0(training_data_V_ce0),
    .q0(training_data_V_q0),
    .address1(training_data_V_address1),
    .ce1(training_data_V_ce1),
    .q1(training_data_V_q1),
    .address2(training_data_V_address2),
    .ce2(training_data_V_ce2),
    .q2(training_data_V_q2)
);

update_knn grp_update_knn_fu_664(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .test_inst_V(input_V),
    .train_inst_V(reg_1029),
    .min_distances_V_read(grp_update_knn_fu_664_min_distances_V_read),
    .min_distances_V12_read(grp_update_knn_fu_664_min_distances_V12_read),
    .min_distances_V2_read(grp_update_knn_fu_664_min_distances_V2_read),
    .min_distances_V3_read(grp_update_knn_fu_664_min_distances_V3_read),
    .min_distances_V14_read(grp_update_knn_fu_664_min_distances_V14_read),
    .min_distances_V15_read(grp_update_knn_fu_664_min_distances_V15_read),
    .min_distances_V16_read(grp_update_knn_fu_664_min_distances_V16_read),
    .min_distances_V17_read(grp_update_knn_fu_664_min_distances_V17_read),
    .min_distances_V28_read(grp_update_knn_fu_664_min_distances_V28_read),
    .min_distances_V29_read(grp_update_knn_fu_664_min_distances_V29_read),
    .min_distances_V210_read(grp_update_knn_fu_664_min_distances_V210_read),
    .min_distances_V211_read(grp_update_knn_fu_664_min_distances_V211_read),
    .min_distances_V_offset(grp_update_knn_fu_664_min_distances_V_offset),
    .ap_return_0(grp_update_knn_fu_664_ap_return_0),
    .ap_return_1(grp_update_knn_fu_664_ap_return_1),
    .ap_return_2(grp_update_knn_fu_664_ap_return_2),
    .ap_return_3(grp_update_knn_fu_664_ap_return_3),
    .ap_return_4(grp_update_knn_fu_664_ap_return_4),
    .ap_return_5(grp_update_knn_fu_664_ap_return_5),
    .ap_return_6(grp_update_knn_fu_664_ap_return_6),
    .ap_return_7(grp_update_knn_fu_664_ap_return_7),
    .ap_return_8(grp_update_knn_fu_664_ap_return_8),
    .ap_return_9(grp_update_knn_fu_664_ap_return_9),
    .ap_return_10(grp_update_knn_fu_664_ap_return_10),
    .ap_return_11(grp_update_knn_fu_664_ap_return_11),
    .ap_ce(grp_update_knn_fu_664_ap_ce)
);

update_knn_1 grp_update_knn_1_fu_699(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .test_inst_V(input_V),
    .train_inst_V(reg_1034),
    .min_distances_V_read(grp_update_knn_1_fu_699_min_distances_V_read),
    .min_distances_V12_read(grp_update_knn_1_fu_699_min_distances_V12_read),
    .min_distances_V2_read(grp_update_knn_1_fu_699_min_distances_V2_read),
    .min_distances_V13_read(grp_update_knn_1_fu_699_min_distances_V13_read),
    .min_distances_V14_read(grp_update_knn_1_fu_699_min_distances_V14_read),
    .min_distances_V15_read(grp_update_knn_1_fu_699_min_distances_V15_read),
    .min_distances_V26_read(grp_update_knn_1_fu_699_min_distances_V26_read),
    .min_distances_V27_read(grp_update_knn_1_fu_699_min_distances_V27_read),
    .min_distances_V28_read(grp_update_knn_1_fu_699_min_distances_V28_read),
    .min_distances_V_offset(grp_update_knn_1_fu_699_min_distances_V_offset),
    .ap_return_0(grp_update_knn_1_fu_699_ap_return_0),
    .ap_return_1(grp_update_knn_1_fu_699_ap_return_1),
    .ap_return_2(grp_update_knn_1_fu_699_ap_return_2),
    .ap_return_3(grp_update_knn_1_fu_699_ap_return_3),
    .ap_return_4(grp_update_knn_1_fu_699_ap_return_4),
    .ap_return_5(grp_update_knn_1_fu_699_ap_return_5),
    .ap_return_6(grp_update_knn_1_fu_699_ap_return_6),
    .ap_return_7(grp_update_knn_1_fu_699_ap_return_7),
    .ap_return_8(grp_update_knn_1_fu_699_ap_return_8),
    .ap_ce(grp_update_knn_1_fu_699_ap_ce)
);

update_knn_1 grp_update_knn_1_fu_725(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .test_inst_V(input_V),
    .train_inst_V(reg_1040),
    .min_distances_V_read(grp_update_knn_1_fu_725_min_distances_V_read),
    .min_distances_V12_read(grp_update_knn_1_fu_725_min_distances_V12_read),
    .min_distances_V2_read(grp_update_knn_1_fu_725_min_distances_V2_read),
    .min_distances_V13_read(grp_update_knn_1_fu_725_min_distances_V13_read),
    .min_distances_V14_read(grp_update_knn_1_fu_725_min_distances_V14_read),
    .min_distances_V15_read(grp_update_knn_1_fu_725_min_distances_V15_read),
    .min_distances_V26_read(grp_update_knn_1_fu_725_min_distances_V26_read),
    .min_distances_V27_read(grp_update_knn_1_fu_725_min_distances_V27_read),
    .min_distances_V28_read(grp_update_knn_1_fu_725_min_distances_V28_read),
    .min_distances_V_offset(grp_update_knn_1_fu_725_min_distances_V_offset),
    .ap_return_0(grp_update_knn_1_fu_725_ap_return_0),
    .ap_return_1(grp_update_knn_1_fu_725_ap_return_1),
    .ap_return_2(grp_update_knn_1_fu_725_ap_return_2),
    .ap_return_3(grp_update_knn_1_fu_725_ap_return_3),
    .ap_return_4(grp_update_knn_1_fu_725_ap_return_4),
    .ap_return_5(grp_update_knn_1_fu_725_ap_return_5),
    .ap_return_6(grp_update_knn_1_fu_725_ap_return_6),
    .ap_return_7(grp_update_knn_1_fu_725_ap_return_7),
    .ap_return_8(grp_update_knn_1_fu_725_ap_return_8),
    .ap_ce(grp_update_knn_1_fu_725_ap_ce)
);

knn_vote grp_knn_vote_fu_755(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .knn_set_0_0_0_V_r(knn_set_0_0_0_V_3_reg_643),
    .knn_set_0_0_1_V_r(knn_set_0_0_1_V_3_reg_633),
    .knn_set_0_0_2_V_r(knn_set_0_0_2_V_3_reg_623),
    .knn_set_0_0_3_V_r(knn_set_0_0_3_V_3_reg_613),
    .knn_set_0_1_0_V_r(knn_set_0_1_0_V_3_reg_603),
    .knn_set_0_1_1_V_r(knn_set_0_1_1_V_3_reg_593),
    .knn_set_0_1_2_V_r(knn_set_0_1_2_V_3_reg_583),
    .knn_set_0_1_3_V_r(knn_set_0_1_3_V_3_reg_573),
    .knn_set_0_2_0_V_r(knn_set_0_2_0_V_3_reg_563),
    .knn_set_0_2_1_V_r(knn_set_0_2_1_V_3_reg_553),
    .knn_set_0_2_2_V_r(knn_set_0_2_2_V_3_reg_543),
    .knn_set_0_2_3_V_r(knn_set_0_2_3_V_3_reg_533),
    .knn_set_1_0_0_V_r(knn_set_1_0_0_V_3_reg_523),
    .knn_set_1_0_1_V_r(knn_set_1_0_1_V_3_reg_513),
    .knn_set_1_0_2_V_r(knn_set_1_0_2_V_3_reg_503),
    .knn_set_1_1_0_V_r(knn_set_1_1_0_V_3_reg_493),
    .knn_set_1_1_1_V_r(knn_set_1_1_1_V_3_reg_483),
    .knn_set_1_1_2_V_r(knn_set_1_1_2_V_3_reg_473),
    .knn_set_1_2_0_V_r(knn_set_1_2_0_V_3_reg_463),
    .knn_set_1_2_1_V_r(knn_set_1_2_1_V_3_reg_453),
    .knn_set_1_2_2_V_r(knn_set_1_2_2_V_3_reg_443),
    .knn_set_2_0_0_V_r(knn_set_2_0_0_V_3_reg_433),
    .knn_set_2_0_1_V_r(knn_set_2_0_1_V_3_reg_423),
    .knn_set_2_0_2_V_r(knn_set_2_0_2_V_3_reg_413),
    .knn_set_2_1_0_V_r(knn_set_2_1_0_V_3_reg_403),
    .knn_set_2_1_1_V_r(knn_set_2_1_1_V_3_reg_393),
    .knn_set_2_1_2_V_r(knn_set_2_1_2_V_3_reg_383),
    .knn_set_2_2_0_V_r(knn_set_2_2_0_V_3_reg_373),
    .knn_set_2_2_1_V_r(knn_set_2_2_1_V_3_reg_363),
    .knn_set_2_2_2_V_r(knn_set_2_2_2_V_3_reg_353),
    .ap_return(grp_knn_vote_fu_755_ap_return)
);

digitrec_mux_42_6g8j #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 6 ),
    .din2_WIDTH( 6 ),
    .din3_WIDTH( 6 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 6 ))
digitrec_mux_42_6g8j_U92(
    .din0(6'd50),
    .din1(knn_set_1_1_0_V_fu_152),
    .din2(knn_set_1_1_0_V_fu_152),
    .din3(knn_set_1_1_0_V_fu_152),
    .din4(newIndex_t_reg_2305),
    .dout(knn_set_1_1_0_V_5_fu_1258_p6)
);

digitrec_mux_42_6g8j #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 6 ),
    .din2_WIDTH( 6 ),
    .din3_WIDTH( 6 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 6 ))
digitrec_mux_42_6g8j_U93(
    .din0(knn_set_1_1_1_V_fu_156),
    .din1(6'd50),
    .din2(knn_set_1_1_1_V_fu_156),
    .din3(knn_set_1_1_1_V_fu_156),
    .din4(newIndex_t_reg_2305),
    .dout(knn_set_1_1_1_V_5_fu_1271_p6)
);

digitrec_mux_42_6g8j #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 6 ),
    .din2_WIDTH( 6 ),
    .din3_WIDTH( 6 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 6 ))
digitrec_mux_42_6g8j_U94(
    .din0(knn_set_1_1_2_V_fu_160),
    .din1(knn_set_1_1_2_V_fu_160),
    .din2(6'd50),
    .din3(6'd50),
    .din4(newIndex_t_reg_2305),
    .dout(knn_set_1_1_2_V_5_fu_1284_p6)
);

digitrec_mux_42_6g8j #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 6 ),
    .din2_WIDTH( 6 ),
    .din3_WIDTH( 6 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 6 ))
digitrec_mux_42_6g8j_U95(
    .din0(6'd50),
    .din1(knn_set_1_0_0_V_fu_140),
    .din2(knn_set_1_0_0_V_fu_140),
    .din3(knn_set_1_0_0_V_fu_140),
    .din4(newIndex_t_reg_2305),
    .dout(knn_set_1_0_0_V_5_fu_1312_p6)
);

digitrec_mux_42_6g8j #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 6 ),
    .din2_WIDTH( 6 ),
    .din3_WIDTH( 6 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 6 ))
digitrec_mux_42_6g8j_U96(
    .din0(knn_set_1_0_1_V_fu_144),
    .din1(6'd50),
    .din2(knn_set_1_0_1_V_fu_144),
    .din3(knn_set_1_0_1_V_fu_144),
    .din4(newIndex_t_reg_2305),
    .dout(knn_set_1_0_1_V_5_fu_1325_p6)
);

digitrec_mux_42_6g8j #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 6 ),
    .din2_WIDTH( 6 ),
    .din3_WIDTH( 6 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 6 ))
digitrec_mux_42_6g8j_U97(
    .din0(knn_set_1_0_2_V_fu_148),
    .din1(knn_set_1_0_2_V_fu_148),
    .din2(6'd50),
    .din3(6'd50),
    .din4(newIndex_t_reg_2305),
    .dout(knn_set_1_0_2_V_5_fu_1338_p6)
);

digitrec_mux_42_6g8j #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 6 ),
    .din2_WIDTH( 6 ),
    .din3_WIDTH( 6 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 6 ))
digitrec_mux_42_6g8j_U98(
    .din0(6'd50),
    .din1(knn_set_1_2_0_V_fu_164),
    .din2(knn_set_1_2_0_V_fu_164),
    .din3(knn_set_1_2_0_V_fu_164),
    .din4(newIndex_t_reg_2305),
    .dout(knn_set_1_2_0_V_5_fu_1366_p6)
);

digitrec_mux_42_6g8j #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 6 ),
    .din2_WIDTH( 6 ),
    .din3_WIDTH( 6 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 6 ))
digitrec_mux_42_6g8j_U99(
    .din0(knn_set_1_2_1_V_fu_168),
    .din1(6'd50),
    .din2(knn_set_1_2_1_V_fu_168),
    .din3(knn_set_1_2_1_V_fu_168),
    .din4(newIndex_t_reg_2305),
    .dout(knn_set_1_2_1_V_5_fu_1379_p6)
);

digitrec_mux_42_6g8j #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 6 ),
    .din2_WIDTH( 6 ),
    .din3_WIDTH( 6 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 6 ))
digitrec_mux_42_6g8j_U100(
    .din0(knn_set_1_2_2_V_fu_172),
    .din1(knn_set_1_2_2_V_fu_172),
    .din2(6'd50),
    .din3(6'd50),
    .din4(newIndex_t_reg_2305),
    .dout(knn_set_1_2_2_V_5_fu_1392_p6)
);

digitrec_mux_42_6g8j #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 6 ),
    .din2_WIDTH( 6 ),
    .din3_WIDTH( 6 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 6 ))
digitrec_mux_42_6g8j_U101(
    .din0(6'd50),
    .din1(knn_set_0_1_0_V_fu_108),
    .din2(knn_set_0_1_0_V_fu_108),
    .din3(knn_set_0_1_0_V_fu_108),
    .din4(newIndex_t_reg_2305),
    .dout(knn_set_0_1_0_V_5_fu_1420_p6)
);

digitrec_mux_42_6g8j #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 6 ),
    .din2_WIDTH( 6 ),
    .din3_WIDTH( 6 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 6 ))
digitrec_mux_42_6g8j_U102(
    .din0(knn_set_0_1_1_V_fu_112),
    .din1(6'd50),
    .din2(knn_set_0_1_1_V_fu_112),
    .din3(knn_set_0_1_1_V_fu_112),
    .din4(newIndex_t_reg_2305),
    .dout(knn_set_0_1_1_V_5_fu_1433_p6)
);

digitrec_mux_42_6g8j #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 6 ),
    .din2_WIDTH( 6 ),
    .din3_WIDTH( 6 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 6 ))
digitrec_mux_42_6g8j_U103(
    .din0(knn_set_0_1_2_V_fu_116),
    .din1(knn_set_0_1_2_V_fu_116),
    .din2(6'd50),
    .din3(knn_set_0_1_2_V_fu_116),
    .din4(newIndex_t_reg_2305),
    .dout(knn_set_0_1_2_V_5_fu_1446_p6)
);

digitrec_mux_42_6g8j #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 6 ),
    .din2_WIDTH( 6 ),
    .din3_WIDTH( 6 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 6 ))
digitrec_mux_42_6g8j_U104(
    .din0(knn_set_0_1_3_V_fu_120),
    .din1(knn_set_0_1_3_V_fu_120),
    .din2(knn_set_0_1_3_V_fu_120),
    .din3(6'd50),
    .din4(newIndex_t_reg_2305),
    .dout(knn_set_0_1_3_V_5_fu_1459_p6)
);

digitrec_mux_42_6g8j #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 6 ),
    .din2_WIDTH( 6 ),
    .din3_WIDTH( 6 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 6 ))
digitrec_mux_42_6g8j_U105(
    .din0(6'd50),
    .din1(knn_set_0_0_0_V_fu_92),
    .din2(knn_set_0_0_0_V_fu_92),
    .din3(knn_set_0_0_0_V_fu_92),
    .din4(newIndex_t_reg_2305),
    .dout(knn_set_0_0_0_V_5_fu_1492_p6)
);

digitrec_mux_42_6g8j #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 6 ),
    .din2_WIDTH( 6 ),
    .din3_WIDTH( 6 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 6 ))
digitrec_mux_42_6g8j_U106(
    .din0(knn_set_0_0_1_V_fu_96),
    .din1(6'd50),
    .din2(knn_set_0_0_1_V_fu_96),
    .din3(knn_set_0_0_1_V_fu_96),
    .din4(newIndex_t_reg_2305),
    .dout(knn_set_0_0_1_V_5_fu_1505_p6)
);

digitrec_mux_42_6g8j #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 6 ),
    .din2_WIDTH( 6 ),
    .din3_WIDTH( 6 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 6 ))
digitrec_mux_42_6g8j_U107(
    .din0(knn_set_0_0_2_V_fu_100),
    .din1(knn_set_0_0_2_V_fu_100),
    .din2(6'd50),
    .din3(knn_set_0_0_2_V_fu_100),
    .din4(newIndex_t_reg_2305),
    .dout(knn_set_0_0_2_V_5_fu_1518_p6)
);

digitrec_mux_42_6g8j #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 6 ),
    .din2_WIDTH( 6 ),
    .din3_WIDTH( 6 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 6 ))
digitrec_mux_42_6g8j_U108(
    .din0(knn_set_0_0_3_V_fu_104),
    .din1(knn_set_0_0_3_V_fu_104),
    .din2(knn_set_0_0_3_V_fu_104),
    .din3(6'd50),
    .din4(newIndex_t_reg_2305),
    .dout(knn_set_0_0_3_V_5_fu_1531_p6)
);

digitrec_mux_42_6g8j #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 6 ),
    .din2_WIDTH( 6 ),
    .din3_WIDTH( 6 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 6 ))
digitrec_mux_42_6g8j_U109(
    .din0(6'd50),
    .din1(knn_set_0_2_0_V_fu_124),
    .din2(knn_set_0_2_0_V_fu_124),
    .din3(knn_set_0_2_0_V_fu_124),
    .din4(newIndex_t_reg_2305),
    .dout(knn_set_0_2_0_V_5_fu_1564_p6)
);

digitrec_mux_42_6g8j #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 6 ),
    .din2_WIDTH( 6 ),
    .din3_WIDTH( 6 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 6 ))
digitrec_mux_42_6g8j_U110(
    .din0(knn_set_0_2_1_V_fu_128),
    .din1(6'd50),
    .din2(knn_set_0_2_1_V_fu_128),
    .din3(knn_set_0_2_1_V_fu_128),
    .din4(newIndex_t_reg_2305),
    .dout(knn_set_0_2_1_V_5_fu_1577_p6)
);

digitrec_mux_42_6g8j #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 6 ),
    .din2_WIDTH( 6 ),
    .din3_WIDTH( 6 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 6 ))
digitrec_mux_42_6g8j_U111(
    .din0(knn_set_0_2_2_V_fu_132),
    .din1(knn_set_0_2_2_V_fu_132),
    .din2(6'd50),
    .din3(knn_set_0_2_2_V_fu_132),
    .din4(newIndex_t_reg_2305),
    .dout(knn_set_0_2_2_V_5_fu_1590_p6)
);

digitrec_mux_42_6g8j #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 6 ),
    .din2_WIDTH( 6 ),
    .din3_WIDTH( 6 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 6 ))
digitrec_mux_42_6g8j_U112(
    .din0(knn_set_0_2_3_V_fu_136),
    .din1(knn_set_0_2_3_V_fu_136),
    .din2(knn_set_0_2_3_V_fu_136),
    .din3(6'd50),
    .din4(newIndex_t_reg_2305),
    .dout(knn_set_0_2_3_V_5_fu_1603_p6)
);

digitrec_mux_42_6g8j #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 6 ),
    .din2_WIDTH( 6 ),
    .din3_WIDTH( 6 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 6 ))
digitrec_mux_42_6g8j_U113(
    .din0(6'd50),
    .din1(knn_set_2_1_0_V_fu_188),
    .din2(knn_set_2_1_0_V_fu_188),
    .din3(knn_set_2_1_0_V_fu_188),
    .din4(newIndex_t_reg_2305),
    .dout(knn_set_2_1_0_V_5_fu_1636_p6)
);

digitrec_mux_42_6g8j #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 6 ),
    .din2_WIDTH( 6 ),
    .din3_WIDTH( 6 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 6 ))
digitrec_mux_42_6g8j_U114(
    .din0(knn_set_2_1_1_V_fu_192),
    .din1(6'd50),
    .din2(knn_set_2_1_1_V_fu_192),
    .din3(knn_set_2_1_1_V_fu_192),
    .din4(newIndex_t_reg_2305),
    .dout(knn_set_2_1_1_V_5_fu_1649_p6)
);

digitrec_mux_42_6g8j #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 6 ),
    .din2_WIDTH( 6 ),
    .din3_WIDTH( 6 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 6 ))
digitrec_mux_42_6g8j_U115(
    .din0(knn_set_2_1_2_V_fu_196),
    .din1(knn_set_2_1_2_V_fu_196),
    .din2(6'd50),
    .din3(6'd50),
    .din4(newIndex_t_reg_2305),
    .dout(knn_set_2_1_2_V_5_fu_1662_p6)
);

digitrec_mux_42_6g8j #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 6 ),
    .din2_WIDTH( 6 ),
    .din3_WIDTH( 6 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 6 ))
digitrec_mux_42_6g8j_U116(
    .din0(6'd50),
    .din1(knn_set_2_0_0_V_fu_176),
    .din2(knn_set_2_0_0_V_fu_176),
    .din3(knn_set_2_0_0_V_fu_176),
    .din4(newIndex_t_reg_2305),
    .dout(knn_set_2_0_0_V_5_fu_1690_p6)
);

digitrec_mux_42_6g8j #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 6 ),
    .din2_WIDTH( 6 ),
    .din3_WIDTH( 6 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 6 ))
digitrec_mux_42_6g8j_U117(
    .din0(knn_set_2_0_1_V_fu_180),
    .din1(6'd50),
    .din2(knn_set_2_0_1_V_fu_180),
    .din3(knn_set_2_0_1_V_fu_180),
    .din4(newIndex_t_reg_2305),
    .dout(knn_set_2_0_1_V_5_fu_1703_p6)
);

digitrec_mux_42_6g8j #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 6 ),
    .din2_WIDTH( 6 ),
    .din3_WIDTH( 6 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 6 ))
digitrec_mux_42_6g8j_U118(
    .din0(knn_set_2_0_2_V_fu_184),
    .din1(knn_set_2_0_2_V_fu_184),
    .din2(6'd50),
    .din3(6'd50),
    .din4(newIndex_t_reg_2305),
    .dout(knn_set_2_0_2_V_5_fu_1716_p6)
);

digitrec_mux_42_6g8j #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 6 ),
    .din2_WIDTH( 6 ),
    .din3_WIDTH( 6 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 6 ))
digitrec_mux_42_6g8j_U119(
    .din0(6'd50),
    .din1(knn_set_2_2_0_V_fu_200),
    .din2(knn_set_2_2_0_V_fu_200),
    .din3(knn_set_2_2_0_V_fu_200),
    .din4(newIndex_t_reg_2305),
    .dout(knn_set_2_2_0_V_5_fu_1744_p6)
);

digitrec_mux_42_6g8j #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 6 ),
    .din2_WIDTH( 6 ),
    .din3_WIDTH( 6 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 6 ))
digitrec_mux_42_6g8j_U120(
    .din0(knn_set_2_2_1_V_fu_204),
    .din1(6'd50),
    .din2(knn_set_2_2_1_V_fu_204),
    .din3(knn_set_2_2_1_V_fu_204),
    .din4(newIndex_t_reg_2305),
    .dout(knn_set_2_2_1_V_5_fu_1757_p6)
);

digitrec_mux_42_6g8j #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 6 ),
    .din2_WIDTH( 6 ),
    .din3_WIDTH( 6 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 6 ))
digitrec_mux_42_6g8j_U121(
    .din0(knn_set_2_2_2_V_fu_208),
    .din1(knn_set_2_2_2_V_fu_208),
    .din2(6'd50),
    .din3(6'd50),
    .din4(newIndex_t_reg_2305),
    .dout(knn_set_2_2_2_V_5_fu_1770_p6)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1_fu_1220_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        i4_reg_653 <= 11'd0;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        i4_reg_653 <= i_2_reg_2378;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond3_fu_1246_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        i_reg_308 <= i_1_reg_2296;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        i_reg_308 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        k_reg_342 <= k_1_reg_2342;
    end else if (((exitcond1_fu_1220_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        k_reg_342 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1_fu_1220_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        knn_set_0_0_0_V_3_reg_643 <= knn_set_0_0_0_V_fu_92;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        knn_set_0_0_0_V_3_reg_643 <= grp_update_knn_fu_664_ap_return_0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1_fu_1220_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        knn_set_0_0_1_V_3_reg_633 <= knn_set_0_0_1_V_fu_96;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        knn_set_0_0_1_V_3_reg_633 <= grp_update_knn_fu_664_ap_return_1;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1_fu_1220_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        knn_set_0_0_2_V_3_reg_623 <= knn_set_0_0_2_V_fu_100;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        knn_set_0_0_2_V_3_reg_623 <= grp_update_knn_fu_664_ap_return_2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1_fu_1220_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        knn_set_0_0_3_V_3_reg_613 <= knn_set_0_0_3_V_fu_104;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        knn_set_0_0_3_V_3_reg_613 <= grp_update_knn_fu_664_ap_return_3;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1_fu_1220_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        knn_set_0_1_0_V_3_reg_603 <= knn_set_0_1_0_V_fu_108;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        knn_set_0_1_0_V_3_reg_603 <= grp_update_knn_fu_664_ap_return_4;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1_fu_1220_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        knn_set_0_1_1_V_3_reg_593 <= knn_set_0_1_1_V_fu_112;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        knn_set_0_1_1_V_3_reg_593 <= grp_update_knn_fu_664_ap_return_5;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1_fu_1220_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        knn_set_0_1_2_V_3_reg_583 <= knn_set_0_1_2_V_fu_116;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        knn_set_0_1_2_V_3_reg_583 <= grp_update_knn_fu_664_ap_return_6;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1_fu_1220_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        knn_set_0_1_3_V_3_reg_573 <= knn_set_0_1_3_V_fu_120;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        knn_set_0_1_3_V_3_reg_573 <= grp_update_knn_fu_664_ap_return_7;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1_fu_1220_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        knn_set_0_2_0_V_3_reg_563 <= knn_set_0_2_0_V_fu_124;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        knn_set_0_2_0_V_3_reg_563 <= grp_update_knn_fu_664_ap_return_8;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1_fu_1220_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        knn_set_0_2_1_V_3_reg_553 <= knn_set_0_2_1_V_fu_128;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        knn_set_0_2_1_V_3_reg_553 <= grp_update_knn_fu_664_ap_return_9;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1_fu_1220_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        knn_set_0_2_2_V_3_reg_543 <= knn_set_0_2_2_V_fu_132;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        knn_set_0_2_2_V_3_reg_543 <= grp_update_knn_fu_664_ap_return_10;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1_fu_1220_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        knn_set_0_2_3_V_3_reg_533 <= knn_set_0_2_3_V_fu_136;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        knn_set_0_2_3_V_3_reg_533 <= grp_update_knn_fu_664_ap_return_11;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1_fu_1220_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        knn_set_1_0_0_V_3_reg_523 <= knn_set_1_0_0_V_fu_140;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        knn_set_1_0_0_V_3_reg_523 <= reg_1046;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1_fu_1220_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        knn_set_1_0_1_V_3_reg_513 <= knn_set_1_0_1_V_fu_144;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        knn_set_1_0_1_V_3_reg_513 <= reg_1052;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1_fu_1220_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        knn_set_1_0_2_V_3_reg_503 <= knn_set_1_0_2_V_fu_148;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        knn_set_1_0_2_V_3_reg_503 <= reg_1058;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1_fu_1220_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        knn_set_1_1_0_V_3_reg_493 <= knn_set_1_1_0_V_fu_152;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        knn_set_1_1_0_V_3_reg_493 <= reg_1064;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1_fu_1220_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        knn_set_1_1_1_V_3_reg_483 <= knn_set_1_1_1_V_fu_156;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        knn_set_1_1_1_V_3_reg_483 <= reg_1070;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1_fu_1220_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        knn_set_1_1_2_V_3_reg_473 <= knn_set_1_1_2_V_fu_160;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        knn_set_1_1_2_V_3_reg_473 <= reg_1076;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1_fu_1220_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        knn_set_1_2_0_V_3_reg_463 <= knn_set_1_2_0_V_fu_164;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        knn_set_1_2_0_V_3_reg_463 <= reg_1082;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1_fu_1220_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        knn_set_1_2_1_V_3_reg_453 <= knn_set_1_2_1_V_fu_168;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        knn_set_1_2_1_V_3_reg_453 <= reg_1088;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1_fu_1220_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        knn_set_1_2_2_V_3_reg_443 <= knn_set_1_2_2_V_fu_172;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        knn_set_1_2_2_V_3_reg_443 <= reg_1094;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1_fu_1220_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        knn_set_2_0_0_V_3_reg_433 <= knn_set_2_0_0_V_fu_176;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        knn_set_2_0_0_V_3_reg_433 <= reg_1100;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1_fu_1220_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        knn_set_2_0_1_V_3_reg_423 <= knn_set_2_0_1_V_fu_180;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        knn_set_2_0_1_V_3_reg_423 <= reg_1106;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1_fu_1220_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        knn_set_2_0_2_V_3_reg_413 <= knn_set_2_0_2_V_fu_184;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        knn_set_2_0_2_V_3_reg_413 <= reg_1112;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1_fu_1220_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        knn_set_2_1_0_V_3_reg_403 <= knn_set_2_1_0_V_fu_188;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        knn_set_2_1_0_V_3_reg_403 <= reg_1118;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1_fu_1220_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        knn_set_2_1_1_V_3_reg_393 <= knn_set_2_1_1_V_fu_192;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        knn_set_2_1_1_V_3_reg_393 <= reg_1124;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1_fu_1220_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        knn_set_2_1_2_V_3_reg_383 <= knn_set_2_1_2_V_fu_196;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        knn_set_2_1_2_V_3_reg_383 <= reg_1130;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1_fu_1220_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        knn_set_2_2_0_V_3_reg_373 <= knn_set_2_2_0_V_fu_200;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        knn_set_2_2_0_V_3_reg_373 <= reg_1136;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1_fu_1220_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        knn_set_2_2_1_V_3_reg_363 <= knn_set_2_2_1_V_fu_204;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        knn_set_2_2_1_V_3_reg_363 <= reg_1142;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1_fu_1220_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        knn_set_2_2_2_V_3_reg_353 <= knn_set_2_2_2_V_fu_208;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        knn_set_2_2_2_V_3_reg_353 <= reg_1148;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond3_fu_1246_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        phi_mul_reg_319 <= next_mul_reg_2288;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        phi_mul_reg_319 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond3_fu_1246_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        phi_urem_reg_330 <= idx_urem_fu_1810_p3;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        phi_urem_reg_330 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        reg_1034 <= training_data_V_q0;
    end else if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state6))) begin
        reg_1034 <= training_data_V_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        reg_1040 <= training_data_V_q1;
    end else if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state6))) begin
        reg_1040 <= training_data_V_q2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        i4_cast1_reg_2352[10 : 0] <= i4_cast1_fu_1818_p1[10 : 0];
        i4_cast225_cast1_reg_2364[10 : 0] <= i4_cast225_cast1_fu_1826_p1[10 : 0];
        i4_cast225_cast_reg_2369[10 : 0] <= i4_cast225_cast_fu_1830_p1[10 : 0];
        i4_cast2_reg_2357[10 : 0] <= i4_cast2_fu_1822_p1[10 : 0];
        i_2_reg_2378 <= i_2_fu_1840_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        i_1_reg_2296 <= i_1_fu_1226_p2;
        next_mul_reg_2288 <= next_mul_fu_1214_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        k_1_reg_2342 <= k_1_fu_1252_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_phi_mux_k_phi_fu_346_p4 == 2'd0) & (exitcond3_fu_1246_p2 == 1'd0) & (tmp_reg_2301 == 3'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        knn_set_0_0_0_V_fu_92 <= knn_set_0_0_0_V_5_fu_1492_p6;
        knn_set_0_0_1_V_fu_96 <= knn_set_0_0_1_V_5_fu_1505_p6;
        knn_set_0_0_2_V_fu_100 <= knn_set_0_0_2_V_5_fu_1518_p6;
        knn_set_0_0_3_V_fu_104 <= knn_set_0_0_3_V_5_fu_1531_p6;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_phi_mux_k_phi_fu_346_p4 == 2'd1) & (exitcond3_fu_1246_p2 == 1'd0) & (tmp_reg_2301 == 3'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        knn_set_0_1_0_V_fu_108 <= knn_set_0_1_0_V_5_fu_1420_p6;
        knn_set_0_1_1_V_fu_112 <= knn_set_0_1_1_V_5_fu_1433_p6;
        knn_set_0_1_2_V_fu_116 <= knn_set_0_1_2_V_5_fu_1446_p6;
        knn_set_0_1_3_V_fu_120 <= knn_set_0_1_3_V_5_fu_1459_p6;
    end
end

always @ (posedge ap_clk) begin
    if ((~(ap_phi_mux_k_phi_fu_346_p4 == 2'd1) & ~(ap_phi_mux_k_phi_fu_346_p4 == 2'd0) & (exitcond3_fu_1246_p2 == 1'd0) & (tmp_reg_2301 == 3'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        knn_set_0_2_0_V_fu_124 <= knn_set_0_2_0_V_5_fu_1564_p6;
        knn_set_0_2_1_V_fu_128 <= knn_set_0_2_1_V_5_fu_1577_p6;
        knn_set_0_2_2_V_fu_132 <= knn_set_0_2_2_V_5_fu_1590_p6;
        knn_set_0_2_3_V_fu_136 <= knn_set_0_2_3_V_5_fu_1603_p6;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_phi_mux_k_phi_fu_346_p4 == 2'd0) & (exitcond3_fu_1246_p2 == 1'd0) & (tmp_reg_2301 == 3'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        knn_set_1_0_0_V_fu_140 <= knn_set_1_0_0_V_5_fu_1312_p6;
        knn_set_1_0_1_V_fu_144 <= knn_set_1_0_1_V_5_fu_1325_p6;
        knn_set_1_0_2_V_fu_148 <= knn_set_1_0_2_V_5_fu_1338_p6;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_phi_mux_k_phi_fu_346_p4 == 2'd1) & (exitcond3_fu_1246_p2 == 1'd0) & (tmp_reg_2301 == 3'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        knn_set_1_1_0_V_fu_152 <= knn_set_1_1_0_V_5_fu_1258_p6;
        knn_set_1_1_1_V_fu_156 <= knn_set_1_1_1_V_5_fu_1271_p6;
        knn_set_1_1_2_V_fu_160 <= knn_set_1_1_2_V_5_fu_1284_p6;
    end
end

always @ (posedge ap_clk) begin
    if ((~(ap_phi_mux_k_phi_fu_346_p4 == 2'd1) & ~(ap_phi_mux_k_phi_fu_346_p4 == 2'd0) & (exitcond3_fu_1246_p2 == 1'd0) & (tmp_reg_2301 == 3'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        knn_set_1_2_0_V_fu_164 <= knn_set_1_2_0_V_5_fu_1366_p6;
        knn_set_1_2_1_V_fu_168 <= knn_set_1_2_1_V_5_fu_1379_p6;
        knn_set_1_2_2_V_fu_172 <= knn_set_1_2_2_V_5_fu_1392_p6;
    end
end

always @ (posedge ap_clk) begin
    if ((~(tmp_reg_2301 == 3'd1) & ~(tmp_reg_2301 == 3'd0) & (ap_phi_mux_k_phi_fu_346_p4 == 2'd0) & (exitcond3_fu_1246_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        knn_set_2_0_0_V_fu_176 <= knn_set_2_0_0_V_5_fu_1690_p6;
        knn_set_2_0_1_V_fu_180 <= knn_set_2_0_1_V_5_fu_1703_p6;
        knn_set_2_0_2_V_fu_184 <= knn_set_2_0_2_V_5_fu_1716_p6;
    end
end

always @ (posedge ap_clk) begin
    if ((~(tmp_reg_2301 == 3'd1) & ~(tmp_reg_2301 == 3'd0) & (ap_phi_mux_k_phi_fu_346_p4 == 2'd1) & (exitcond3_fu_1246_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        knn_set_2_1_0_V_fu_188 <= knn_set_2_1_0_V_5_fu_1636_p6;
        knn_set_2_1_1_V_fu_192 <= knn_set_2_1_1_V_5_fu_1649_p6;
        knn_set_2_1_2_V_fu_196 <= knn_set_2_1_2_V_5_fu_1662_p6;
    end
end

always @ (posedge ap_clk) begin
    if ((~(tmp_reg_2301 == 3'd1) & ~(ap_phi_mux_k_phi_fu_346_p4 == 2'd1) & ~(ap_phi_mux_k_phi_fu_346_p4 == 2'd0) & ~(tmp_reg_2301 == 3'd0) & (exitcond3_fu_1246_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        knn_set_2_2_0_V_fu_200 <= knn_set_2_2_0_V_5_fu_1744_p6;
        knn_set_2_2_1_V_fu_204 <= knn_set_2_2_1_V_5_fu_1757_p6;
        knn_set_2_2_2_V_fu_208 <= knn_set_2_2_2_V_5_fu_1770_p6;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1_fu_1220_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        newIndex_t_reg_2305 <= {{phi_mul_reg_319[7:6]}};
        tmp_reg_2301 <= tmp_fu_1232_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state6))) begin
        reg_1029 <= training_data_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state12))) begin
        reg_1046 <= grp_update_knn_1_fu_699_ap_return_0;
        reg_1052 <= grp_update_knn_1_fu_699_ap_return_1;
        reg_1058 <= grp_update_knn_1_fu_699_ap_return_2;
        reg_1064 <= grp_update_knn_1_fu_699_ap_return_3;
        reg_1070 <= grp_update_knn_1_fu_699_ap_return_4;
        reg_1076 <= grp_update_knn_1_fu_699_ap_return_5;
        reg_1082 <= grp_update_knn_1_fu_699_ap_return_6;
        reg_1088 <= grp_update_knn_1_fu_699_ap_return_7;
        reg_1094 <= grp_update_knn_1_fu_699_ap_return_8;
        reg_1100 <= grp_update_knn_1_fu_725_ap_return_0;
        reg_1106 <= grp_update_knn_1_fu_725_ap_return_1;
        reg_1112 <= grp_update_knn_1_fu_725_ap_return_2;
        reg_1118 <= grp_update_knn_1_fu_725_ap_return_3;
        reg_1124 <= grp_update_knn_1_fu_725_ap_return_4;
        reg_1130 <= grp_update_knn_1_fu_725_ap_return_5;
        reg_1136 <= grp_update_knn_1_fu_725_ap_return_6;
        reg_1142 <= grp_update_knn_1_fu_725_ap_return_7;
        reg_1148 <= grp_update_knn_1_fu_725_ap_return_8;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state10))) begin
        reg_1154 <= grp_update_knn_fu_664_ap_return_0;
        reg_1159 <= grp_update_knn_fu_664_ap_return_1;
        reg_1164 <= grp_update_knn_fu_664_ap_return_2;
        reg_1169 <= grp_update_knn_fu_664_ap_return_3;
        reg_1174 <= grp_update_knn_fu_664_ap_return_4;
        reg_1179 <= grp_update_knn_fu_664_ap_return_5;
        reg_1184 <= grp_update_knn_fu_664_ap_return_6;
        reg_1189 <= grp_update_knn_fu_664_ap_return_7;
        reg_1194 <= grp_update_knn_fu_664_ap_return_8;
        reg_1199 <= grp_update_knn_fu_664_ap_return_9;
        reg_1204 <= grp_update_knn_fu_664_ap_return_10;
        reg_1209 <= grp_update_knn_fu_664_ap_return_11;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state12))) begin
        grp_update_knn_1_fu_699_ap_ce = 1'b1;
    end else begin
        grp_update_knn_1_fu_699_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state9))) begin
        grp_update_knn_1_fu_699_min_distances_V12_read = reg_1052;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_update_knn_1_fu_699_min_distances_V12_read = knn_set_1_0_1_V_3_reg_513;
    end else begin
        grp_update_knn_1_fu_699_min_distances_V12_read = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state9))) begin
        grp_update_knn_1_fu_699_min_distances_V13_read = reg_1064;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_update_knn_1_fu_699_min_distances_V13_read = knn_set_1_1_0_V_3_reg_493;
    end else begin
        grp_update_knn_1_fu_699_min_distances_V13_read = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state9))) begin
        grp_update_knn_1_fu_699_min_distances_V14_read = reg_1070;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_update_knn_1_fu_699_min_distances_V14_read = knn_set_1_1_1_V_3_reg_483;
    end else begin
        grp_update_knn_1_fu_699_min_distances_V14_read = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state9))) begin
        grp_update_knn_1_fu_699_min_distances_V15_read = reg_1076;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_update_knn_1_fu_699_min_distances_V15_read = knn_set_1_1_2_V_3_reg_473;
    end else begin
        grp_update_knn_1_fu_699_min_distances_V15_read = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state9))) begin
        grp_update_knn_1_fu_699_min_distances_V26_read = reg_1082;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_update_knn_1_fu_699_min_distances_V26_read = knn_set_1_2_0_V_3_reg_463;
    end else begin
        grp_update_knn_1_fu_699_min_distances_V26_read = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state9))) begin
        grp_update_knn_1_fu_699_min_distances_V27_read = reg_1088;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_update_knn_1_fu_699_min_distances_V27_read = knn_set_1_2_1_V_3_reg_453;
    end else begin
        grp_update_knn_1_fu_699_min_distances_V27_read = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state9))) begin
        grp_update_knn_1_fu_699_min_distances_V28_read = reg_1094;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_update_knn_1_fu_699_min_distances_V28_read = knn_set_1_2_2_V_3_reg_443;
    end else begin
        grp_update_knn_1_fu_699_min_distances_V28_read = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state9))) begin
        grp_update_knn_1_fu_699_min_distances_V2_read = reg_1058;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_update_knn_1_fu_699_min_distances_V2_read = knn_set_1_0_2_V_3_reg_503;
    end else begin
        grp_update_knn_1_fu_699_min_distances_V2_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_update_knn_1_fu_699_min_distances_V_offset = 4'd2;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_update_knn_1_fu_699_min_distances_V_offset = 4'd1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_update_knn_1_fu_699_min_distances_V_offset = 4'd0;
    end else begin
        grp_update_knn_1_fu_699_min_distances_V_offset = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state9))) begin
        grp_update_knn_1_fu_699_min_distances_V_read = reg_1046;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_update_knn_1_fu_699_min_distances_V_read = knn_set_1_0_0_V_3_reg_523;
    end else begin
        grp_update_knn_1_fu_699_min_distances_V_read = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state12))) begin
        grp_update_knn_1_fu_725_ap_ce = 1'b1;
    end else begin
        grp_update_knn_1_fu_725_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state9))) begin
        grp_update_knn_1_fu_725_min_distances_V12_read = reg_1106;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_update_knn_1_fu_725_min_distances_V12_read = knn_set_2_0_1_V_3_reg_423;
    end else begin
        grp_update_knn_1_fu_725_min_distances_V12_read = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state9))) begin
        grp_update_knn_1_fu_725_min_distances_V13_read = reg_1118;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_update_knn_1_fu_725_min_distances_V13_read = knn_set_2_1_0_V_3_reg_403;
    end else begin
        grp_update_knn_1_fu_725_min_distances_V13_read = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state9))) begin
        grp_update_knn_1_fu_725_min_distances_V14_read = reg_1124;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_update_knn_1_fu_725_min_distances_V14_read = knn_set_2_1_1_V_3_reg_393;
    end else begin
        grp_update_knn_1_fu_725_min_distances_V14_read = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state9))) begin
        grp_update_knn_1_fu_725_min_distances_V15_read = reg_1130;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_update_knn_1_fu_725_min_distances_V15_read = knn_set_2_1_2_V_3_reg_383;
    end else begin
        grp_update_knn_1_fu_725_min_distances_V15_read = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state9))) begin
        grp_update_knn_1_fu_725_min_distances_V26_read = reg_1136;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_update_knn_1_fu_725_min_distances_V26_read = knn_set_2_2_0_V_3_reg_373;
    end else begin
        grp_update_knn_1_fu_725_min_distances_V26_read = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state9))) begin
        grp_update_knn_1_fu_725_min_distances_V27_read = reg_1142;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_update_knn_1_fu_725_min_distances_V27_read = knn_set_2_2_1_V_3_reg_363;
    end else begin
        grp_update_knn_1_fu_725_min_distances_V27_read = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state9))) begin
        grp_update_knn_1_fu_725_min_distances_V28_read = reg_1148;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_update_knn_1_fu_725_min_distances_V28_read = knn_set_2_2_2_V_3_reg_353;
    end else begin
        grp_update_knn_1_fu_725_min_distances_V28_read = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state9))) begin
        grp_update_knn_1_fu_725_min_distances_V2_read = reg_1112;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_update_knn_1_fu_725_min_distances_V2_read = knn_set_2_0_2_V_3_reg_413;
    end else begin
        grp_update_knn_1_fu_725_min_distances_V2_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_update_knn_1_fu_725_min_distances_V_offset = 4'd2;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_update_knn_1_fu_725_min_distances_V_offset = 4'd1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_update_knn_1_fu_725_min_distances_V_offset = 4'd0;
    end else begin
        grp_update_knn_1_fu_725_min_distances_V_offset = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state9))) begin
        grp_update_knn_1_fu_725_min_distances_V_read = reg_1100;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_update_knn_1_fu_725_min_distances_V_read = knn_set_2_0_0_V_3_reg_433;
    end else begin
        grp_update_knn_1_fu_725_min_distances_V_read = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state1) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2))) begin
        grp_update_knn_fu_664_ap_ce = 1'b0;
    end else begin
        grp_update_knn_fu_664_ap_ce = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state11))) begin
        grp_update_knn_fu_664_min_distances_V12_read = reg_1159;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_update_knn_fu_664_min_distances_V12_read = knn_set_0_0_1_V_3_reg_633;
    end else begin
        grp_update_knn_fu_664_min_distances_V12_read = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state11))) begin
        grp_update_knn_fu_664_min_distances_V14_read = reg_1174;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_update_knn_fu_664_min_distances_V14_read = knn_set_0_1_0_V_3_reg_603;
    end else begin
        grp_update_knn_fu_664_min_distances_V14_read = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state11))) begin
        grp_update_knn_fu_664_min_distances_V15_read = reg_1179;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_update_knn_fu_664_min_distances_V15_read = knn_set_0_1_1_V_3_reg_593;
    end else begin
        grp_update_knn_fu_664_min_distances_V15_read = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state11))) begin
        grp_update_knn_fu_664_min_distances_V16_read = reg_1184;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_update_knn_fu_664_min_distances_V16_read = knn_set_0_1_2_V_3_reg_583;
    end else begin
        grp_update_knn_fu_664_min_distances_V16_read = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state11))) begin
        grp_update_knn_fu_664_min_distances_V17_read = reg_1189;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_update_knn_fu_664_min_distances_V17_read = knn_set_0_1_3_V_3_reg_573;
    end else begin
        grp_update_knn_fu_664_min_distances_V17_read = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state11))) begin
        grp_update_knn_fu_664_min_distances_V210_read = reg_1204;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_update_knn_fu_664_min_distances_V210_read = knn_set_0_2_2_V_3_reg_543;
    end else begin
        grp_update_knn_fu_664_min_distances_V210_read = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state11))) begin
        grp_update_knn_fu_664_min_distances_V211_read = reg_1209;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_update_knn_fu_664_min_distances_V211_read = knn_set_0_2_3_V_3_reg_533;
    end else begin
        grp_update_knn_fu_664_min_distances_V211_read = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state11))) begin
        grp_update_knn_fu_664_min_distances_V28_read = reg_1194;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_update_knn_fu_664_min_distances_V28_read = knn_set_0_2_0_V_3_reg_563;
    end else begin
        grp_update_knn_fu_664_min_distances_V28_read = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state11))) begin
        grp_update_knn_fu_664_min_distances_V29_read = reg_1199;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_update_knn_fu_664_min_distances_V29_read = knn_set_0_2_1_V_3_reg_553;
    end else begin
        grp_update_knn_fu_664_min_distances_V29_read = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state11))) begin
        grp_update_knn_fu_664_min_distances_V2_read = reg_1164;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_update_knn_fu_664_min_distances_V2_read = knn_set_0_0_2_V_3_reg_623;
    end else begin
        grp_update_knn_fu_664_min_distances_V2_read = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state11))) begin
        grp_update_knn_fu_664_min_distances_V3_read = reg_1169;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_update_knn_fu_664_min_distances_V3_read = knn_set_0_0_3_V_3_reg_613;
    end else begin
        grp_update_knn_fu_664_min_distances_V3_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        grp_update_knn_fu_664_min_distances_V_offset = 4'd3;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        grp_update_knn_fu_664_min_distances_V_offset = 4'd2;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_update_knn_fu_664_min_distances_V_offset = 4'd1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_update_knn_fu_664_min_distances_V_offset = 4'd0;
    end else begin
        grp_update_knn_fu_664_min_distances_V_offset = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state11))) begin
        grp_update_knn_fu_664_min_distances_V_read = reg_1154;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_update_knn_fu_664_min_distances_V_read = knn_set_0_0_0_V_3_reg_643;
    end else begin
        grp_update_knn_fu_664_min_distances_V_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        training_data_V_address0 = tmp_4_9_fu_1946_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        training_data_V_address0 = tmp_4_6_fu_1936_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        training_data_V_address0 = tmp_4_3_fu_1898_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        training_data_V_address0 = tmp_4_4_fu_1878_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        training_data_V_address0 = tmp_4_fu_1846_p1;
    end else begin
        training_data_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        training_data_V_address1 = tmp_4_7_fu_1912_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        training_data_V_address1 = tmp_4_5_fu_1888_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        training_data_V_address1 = tmp_4_1_fu_1857_p1;
    end else begin
        training_data_V_address1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        training_data_V_address2 = tmp_4_8_fu_1926_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        training_data_V_address2 = tmp_4_2_fu_1868_p1;
    end else begin
        training_data_V_address2 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state5))) begin
        training_data_V_ce0 = 1'b1;
    end else begin
        training_data_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state5))) begin
        training_data_V_ce1 = 1'b1;
    end else begin
        training_data_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state5))) begin
        training_data_V_ce2 = 1'b1;
    end else begin
        training_data_V_ce2 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((exitcond1_fu_1220_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((exitcond3_fu_1246_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state5 : begin
            if (((exitcond2_fu_1834_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_phi_mux_k_phi_fu_346_p4 = k_reg_342;

assign ap_return = grp_knn_vote_fu_755_ap_return;

assign exitcond1_fu_1220_p2 = ((i_reg_308 == 4'd10) ? 1'b1 : 1'b0);

assign exitcond2_fu_1834_p2 = ((i4_reg_653 == 11'd1800) ? 1'b1 : 1'b0);

assign exitcond3_fu_1246_p2 = ((k_reg_342 == 2'd3) ? 1'b1 : 1'b0);

assign i4_cast1_fu_1818_p1 = i4_reg_653;

assign i4_cast225_cast1_fu_1826_p1 = i4_reg_653;

assign i4_cast225_cast_fu_1830_p1 = i4_reg_653;

assign i4_cast2_fu_1822_p1 = i4_reg_653;

assign i_1_fu_1226_p2 = (i_reg_308 + 4'd1);

assign i_2_fu_1840_p2 = (i4_reg_653 + 11'd1);

assign idx_urem_fu_1810_p3 = ((tmp_106_fu_1804_p2[0:0] === 1'b1) ? next_urem_fu_1798_p2 : 4'd0);

assign k_1_fu_1252_p2 = (k_reg_342 + 2'd1);

assign next_mul_fu_1214_p2 = (phi_mul_reg_319 + 8'd22);

assign next_urem_fu_1798_p2 = (phi_urem_reg_330 + 4'd1);

assign tmp_106_fu_1804_p2 = ((next_urem_fu_1798_p2 < 4'd3) ? 1'b1 : 1'b0);

assign tmp_3_1_fu_1851_p2 = (i4_cast225_cast1_fu_1826_p1 + 12'd1800);

assign tmp_3_2_fu_1862_p2 = (i4_cast225_cast_fu_1830_p1 + 13'd3600);

assign tmp_3_3_fu_1893_p2 = ($signed(i4_cast225_cast_reg_2369) + $signed(13'd5400));

assign tmp_3_4_fu_1873_p2 = (i4_cast2_reg_2357 + 14'd7200);

assign tmp_3_5_fu_1883_p2 = ($signed(i4_cast2_reg_2357) + $signed(14'd9000));

assign tmp_3_6_fu_1931_p2 = ($signed(i4_cast2_reg_2357) + $signed(14'd10800));

assign tmp_3_7_cast_fu_1908_p1 = $signed(tmp_3_7_fu_1903_p2);

assign tmp_3_7_fu_1903_p2 = ($signed(i4_cast225_cast_reg_2369) + $signed(13'd4408));

assign tmp_3_8_cast_fu_1922_p1 = $signed(tmp_3_8_fu_1917_p2);

assign tmp_3_8_fu_1917_p2 = ($signed(i4_cast225_cast1_reg_2364) + $signed(12'd2112));

assign tmp_3_9_fu_1941_p2 = (i4_cast1_reg_2352 + 15'd16200);

assign tmp_4_1_fu_1857_p1 = tmp_3_1_fu_1851_p2;

assign tmp_4_2_fu_1868_p1 = tmp_3_2_fu_1862_p2;

assign tmp_4_3_fu_1898_p1 = tmp_3_3_fu_1893_p2;

assign tmp_4_4_fu_1878_p1 = tmp_3_4_fu_1873_p2;

assign tmp_4_5_fu_1888_p1 = tmp_3_5_fu_1883_p2;

assign tmp_4_6_fu_1936_p1 = tmp_3_6_fu_1931_p2;

assign tmp_4_7_fu_1912_p1 = $unsigned(tmp_3_7_cast_fu_1908_p1);

assign tmp_4_8_fu_1926_p1 = $unsigned(tmp_3_8_cast_fu_1922_p1);

assign tmp_4_9_fu_1946_p1 = tmp_3_9_fu_1941_p2;

assign tmp_4_fu_1846_p1 = i4_reg_653;

assign tmp_fu_1232_p1 = phi_urem_reg_330[2:0];

always @ (posedge ap_clk) begin
    i4_cast1_reg_2352[14:11] <= 4'b0000;
    i4_cast2_reg_2357[13:11] <= 3'b000;
    i4_cast225_cast1_reg_2364[11] <= 1'b0;
    i4_cast225_cast_reg_2369[12:11] <= 2'b00;
end

endmodule //digitrec
