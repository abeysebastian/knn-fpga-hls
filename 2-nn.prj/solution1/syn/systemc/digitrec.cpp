// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.4
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "digitrec.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic digitrec::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic digitrec::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<8> digitrec::ap_ST_fsm_state1 = "1";
const sc_lv<8> digitrec::ap_ST_fsm_state2 = "10";
const sc_lv<8> digitrec::ap_ST_fsm_state3 = "100";
const sc_lv<8> digitrec::ap_ST_fsm_state4 = "1000";
const sc_lv<8> digitrec::ap_ST_fsm_state5 = "10000";
const sc_lv<8> digitrec::ap_ST_fsm_state6 = "100000";
const sc_lv<8> digitrec::ap_ST_fsm_state7 = "1000000";
const sc_lv<8> digitrec::ap_ST_fsm_state8 = "10000000";
const sc_lv<32> digitrec::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> digitrec::ap_const_lv32_1 = "1";
const sc_lv<1> digitrec::ap_const_lv1_0 = "0";
const sc_lv<32> digitrec::ap_const_lv32_2 = "10";
const sc_lv<32> digitrec::ap_const_lv32_3 = "11";
const sc_lv<32> digitrec::ap_const_lv32_4 = "100";
const sc_lv<32> digitrec::ap_const_lv32_5 = "101";
const sc_lv<4> digitrec::ap_const_lv4_0 = "0000";
const sc_lv<1> digitrec::ap_const_lv1_1 = "1";
const sc_lv<2> digitrec::ap_const_lv2_0 = "00";
const sc_lv<11> digitrec::ap_const_lv11_0 = "00000000000";
const sc_lv<32> digitrec::ap_const_lv32_6 = "110";
const sc_lv<15> digitrec::ap_const_lv15_0 = "000000000000000";
const sc_lv<32> digitrec::ap_const_lv32_7 = "111";
const sc_lv<6> digitrec::ap_const_lv6_32 = "110010";
const sc_lv<4> digitrec::ap_const_lv4_A = "1010";
const sc_lv<4> digitrec::ap_const_lv4_1 = "1";
const sc_lv<2> digitrec::ap_const_lv2_2 = "10";
const sc_lv<2> digitrec::ap_const_lv2_1 = "1";
const sc_lv<11> digitrec::ap_const_lv11_708 = "11100001000";
const sc_lv<11> digitrec::ap_const_lv11_1 = "1";
const sc_lv<15> digitrec::ap_const_lv15_708 = "11100001000";
const bool digitrec::ap_const_boolean_1 = true;

digitrec::digitrec(sc_module_name name) : sc_module(name), mVcdFile(0) {
    training_data_V_U = new digitrec_trainingbkb("training_data_V_U");
    training_data_V_U->clk(ap_clk);
    training_data_V_U->reset(ap_rst);
    training_data_V_U->address0(training_data_V_address0);
    training_data_V_U->ce0(training_data_V_ce0);
    training_data_V_U->q0(training_data_V_q0);
    knn_set_V_U = new digitrec_knn_set_V("knn_set_V_U");
    knn_set_V_U->clk(ap_clk);
    knn_set_V_U->reset(ap_rst);
    knn_set_V_U->address0(knn_set_V_address0);
    knn_set_V_U->ce0(knn_set_V_ce0);
    knn_set_V_U->we0(knn_set_V_we0);
    knn_set_V_U->d0(knn_set_V_d0);
    knn_set_V_U->q0(knn_set_V_q0);
    knn_set_V_U->address1(grp_update_knn_fu_161_min_distances_V_address1);
    knn_set_V_U->ce1(knn_set_V_ce1);
    knn_set_V_U->we1(knn_set_V_we1);
    knn_set_V_U->d1(grp_update_knn_fu_161_min_distances_V_d1);
    grp_knn_vote_fu_156 = new knn_vote("grp_knn_vote_fu_156");
    grp_knn_vote_fu_156->ap_clk(ap_clk);
    grp_knn_vote_fu_156->ap_rst(ap_rst);
    grp_knn_vote_fu_156->ap_start(grp_knn_vote_fu_156_ap_start);
    grp_knn_vote_fu_156->ap_done(grp_knn_vote_fu_156_ap_done);
    grp_knn_vote_fu_156->ap_idle(grp_knn_vote_fu_156_ap_idle);
    grp_knn_vote_fu_156->ap_ready(grp_knn_vote_fu_156_ap_ready);
    grp_knn_vote_fu_156->knn_set_V_address0(grp_knn_vote_fu_156_knn_set_V_address0);
    grp_knn_vote_fu_156->knn_set_V_ce0(grp_knn_vote_fu_156_knn_set_V_ce0);
    grp_knn_vote_fu_156->knn_set_V_q0(knn_set_V_q0);
    grp_knn_vote_fu_156->ap_return(grp_knn_vote_fu_156_ap_return);
    grp_update_knn_fu_161 = new update_knn("grp_update_knn_fu_161");
    grp_update_knn_fu_161->ap_clk(ap_clk);
    grp_update_knn_fu_161->ap_rst(ap_rst);
    grp_update_knn_fu_161->ap_start(grp_update_knn_fu_161_ap_start);
    grp_update_knn_fu_161->ap_done(grp_update_knn_fu_161_ap_done);
    grp_update_knn_fu_161->ap_idle(grp_update_knn_fu_161_ap_idle);
    grp_update_knn_fu_161->ap_ready(grp_update_knn_fu_161_ap_ready);
    grp_update_knn_fu_161->test_inst_V(input_V);
    grp_update_knn_fu_161->train_inst_V(training_instance_V_reg_322);
    grp_update_knn_fu_161->min_distances_V_address0(grp_update_knn_fu_161_min_distances_V_address0);
    grp_update_knn_fu_161->min_distances_V_ce0(grp_update_knn_fu_161_min_distances_V_ce0);
    grp_update_knn_fu_161->min_distances_V_we0(grp_update_knn_fu_161_min_distances_V_we0);
    grp_update_knn_fu_161->min_distances_V_d0(grp_update_knn_fu_161_min_distances_V_d0);
    grp_update_knn_fu_161->min_distances_V_q0(knn_set_V_q0);
    grp_update_knn_fu_161->min_distances_V_address1(grp_update_knn_fu_161_min_distances_V_address1);
    grp_update_knn_fu_161->min_distances_V_ce1(grp_update_knn_fu_161_min_distances_V_ce1);
    grp_update_knn_fu_161->min_distances_V_we1(grp_update_knn_fu_161_min_distances_V_we1);
    grp_update_knn_fu_161->min_distances_V_d1(grp_update_knn_fu_161_min_distances_V_d1);
    grp_update_knn_fu_161->min_distances_V_offset(j_reg_133);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( grp_knn_vote_fu_156_ap_done );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( grp_knn_vote_fu_156_ap_done );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_ap_return);
    sensitive << ( grp_knn_vote_fu_156_ap_done );
    sensitive << ( grp_knn_vote_fu_156_ap_return );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_exitcond1_fu_171_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( i_reg_100 );

    SC_METHOD(thread_exitcond2_fu_225_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( i4_reg_122 );

    SC_METHOD(thread_exitcond3_fu_195_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( k_reg_111 );

    SC_METHOD(thread_exitcond_fu_237_p2);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( j_reg_133 );

    SC_METHOD(thread_grp_knn_vote_fu_156_ap_start);
    sensitive << ( ap_reg_grp_knn_vote_fu_156_ap_start );

    SC_METHOD(thread_grp_update_knn_fu_161_ap_start);
    sensitive << ( ap_reg_grp_update_knn_fu_161_ap_start );

    SC_METHOD(thread_i4_cast3_fu_221_p1);
    sensitive << ( i4_reg_122 );

    SC_METHOD(thread_i_1_fu_177_p2);
    sensitive << ( i_reg_100 );

    SC_METHOD(thread_i_2_fu_231_p2);
    sensitive << ( i4_reg_122 );

    SC_METHOD(thread_j_2_fu_243_p2);
    sensitive << ( j_reg_133 );

    SC_METHOD(thread_k_1_fu_201_p2);
    sensitive << ( k_reg_111 );

    SC_METHOD(thread_knn_set_V_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( grp_knn_vote_fu_156_knn_set_V_address0 );
    sensitive << ( grp_update_knn_fu_161_min_distances_V_address0 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( tmp_8_cast_fu_216_p1 );

    SC_METHOD(thread_knn_set_V_ce0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( grp_knn_vote_fu_156_knn_set_V_ce0 );
    sensitive << ( grp_update_knn_fu_161_min_distances_V_ce0 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_knn_set_V_ce1);
    sensitive << ( grp_update_knn_fu_161_min_distances_V_ce1 );
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_knn_set_V_d0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( grp_update_knn_fu_161_min_distances_V_d0 );
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_knn_set_V_we0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( grp_update_knn_fu_161_min_distances_V_we0 );
    sensitive << ( exitcond3_fu_195_p2 );
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_knn_set_V_we1);
    sensitive << ( grp_update_knn_fu_161_min_distances_V_we1 );
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_next_mul_fu_249_p2);
    sensitive << ( phi_mul_reg_145 );

    SC_METHOD(thread_tmp_5_fu_255_p2);
    sensitive << ( i4_cast3_reg_291 );
    sensitive << ( phi_mul_reg_145 );

    SC_METHOD(thread_tmp_6_fu_260_p1);
    sensitive << ( tmp_5_fu_255_p2 );

    SC_METHOD(thread_tmp_7_cast_fu_191_p1);
    sensitive << ( tmp_fu_183_p3 );

    SC_METHOD(thread_tmp_8_cast_fu_216_p1);
    sensitive << ( tmp_8_fu_211_p2 );

    SC_METHOD(thread_tmp_8_fu_211_p2);
    sensitive << ( tmp_7_cast_reg_278 );
    sensitive << ( tmp_cast_fu_207_p1 );

    SC_METHOD(thread_tmp_cast_fu_207_p1);
    sensitive << ( k_reg_111 );

    SC_METHOD(thread_tmp_fu_183_p3);
    sensitive << ( i_reg_100 );

    SC_METHOD(thread_training_data_V_address0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( tmp_6_fu_260_p1 );

    SC_METHOD(thread_training_data_V_ce0);
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond1_fu_171_p2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( exitcond_fu_237_p2 );
    sensitive << ( grp_knn_vote_fu_156_ap_done );
    sensitive << ( grp_update_knn_fu_161_ap_done );
    sensitive << ( exitcond3_fu_195_p2 );
    sensitive << ( exitcond2_fu_225_p2 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    ap_CS_fsm = "00000001";
    ap_reg_grp_knn_vote_fu_156_ap_start = SC_LOGIC_0;
    ap_reg_grp_update_knn_fu_161_ap_start = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "digitrec_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, input_V, "(port)input_V");
    sc_trace(mVcdFile, ap_return, "(port)ap_return");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, training_data_V_address0, "training_data_V_address0");
    sc_trace(mVcdFile, training_data_V_ce0, "training_data_V_ce0");
    sc_trace(mVcdFile, training_data_V_q0, "training_data_V_q0");
    sc_trace(mVcdFile, i_1_fu_177_p2, "i_1_fu_177_p2");
    sc_trace(mVcdFile, i_1_reg_273, "i_1_reg_273");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, tmp_7_cast_fu_191_p1, "tmp_7_cast_fu_191_p1");
    sc_trace(mVcdFile, tmp_7_cast_reg_278, "tmp_7_cast_reg_278");
    sc_trace(mVcdFile, exitcond1_fu_171_p2, "exitcond1_fu_171_p2");
    sc_trace(mVcdFile, k_1_fu_201_p2, "k_1_fu_201_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, i4_cast3_fu_221_p1, "i4_cast3_fu_221_p1");
    sc_trace(mVcdFile, i4_cast3_reg_291, "i4_cast3_reg_291");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, i_2_fu_231_p2, "i_2_fu_231_p2");
    sc_trace(mVcdFile, i_2_reg_299, "i_2_reg_299");
    sc_trace(mVcdFile, j_2_fu_243_p2, "j_2_fu_243_p2");
    sc_trace(mVcdFile, j_2_reg_307, "j_2_reg_307");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, next_mul_fu_249_p2, "next_mul_fu_249_p2");
    sc_trace(mVcdFile, next_mul_reg_312, "next_mul_reg_312");
    sc_trace(mVcdFile, exitcond_fu_237_p2, "exitcond_fu_237_p2");
    sc_trace(mVcdFile, training_instance_V_reg_322, "training_instance_V_reg_322");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, knn_set_V_address0, "knn_set_V_address0");
    sc_trace(mVcdFile, knn_set_V_ce0, "knn_set_V_ce0");
    sc_trace(mVcdFile, knn_set_V_we0, "knn_set_V_we0");
    sc_trace(mVcdFile, knn_set_V_d0, "knn_set_V_d0");
    sc_trace(mVcdFile, knn_set_V_q0, "knn_set_V_q0");
    sc_trace(mVcdFile, knn_set_V_ce1, "knn_set_V_ce1");
    sc_trace(mVcdFile, knn_set_V_we1, "knn_set_V_we1");
    sc_trace(mVcdFile, grp_knn_vote_fu_156_ap_start, "grp_knn_vote_fu_156_ap_start");
    sc_trace(mVcdFile, grp_knn_vote_fu_156_ap_done, "grp_knn_vote_fu_156_ap_done");
    sc_trace(mVcdFile, grp_knn_vote_fu_156_ap_idle, "grp_knn_vote_fu_156_ap_idle");
    sc_trace(mVcdFile, grp_knn_vote_fu_156_ap_ready, "grp_knn_vote_fu_156_ap_ready");
    sc_trace(mVcdFile, grp_knn_vote_fu_156_knn_set_V_address0, "grp_knn_vote_fu_156_knn_set_V_address0");
    sc_trace(mVcdFile, grp_knn_vote_fu_156_knn_set_V_ce0, "grp_knn_vote_fu_156_knn_set_V_ce0");
    sc_trace(mVcdFile, grp_knn_vote_fu_156_ap_return, "grp_knn_vote_fu_156_ap_return");
    sc_trace(mVcdFile, grp_update_knn_fu_161_ap_start, "grp_update_knn_fu_161_ap_start");
    sc_trace(mVcdFile, grp_update_knn_fu_161_ap_done, "grp_update_knn_fu_161_ap_done");
    sc_trace(mVcdFile, grp_update_knn_fu_161_ap_idle, "grp_update_knn_fu_161_ap_idle");
    sc_trace(mVcdFile, grp_update_knn_fu_161_ap_ready, "grp_update_knn_fu_161_ap_ready");
    sc_trace(mVcdFile, grp_update_knn_fu_161_min_distances_V_address0, "grp_update_knn_fu_161_min_distances_V_address0");
    sc_trace(mVcdFile, grp_update_knn_fu_161_min_distances_V_ce0, "grp_update_knn_fu_161_min_distances_V_ce0");
    sc_trace(mVcdFile, grp_update_knn_fu_161_min_distances_V_we0, "grp_update_knn_fu_161_min_distances_V_we0");
    sc_trace(mVcdFile, grp_update_knn_fu_161_min_distances_V_d0, "grp_update_knn_fu_161_min_distances_V_d0");
    sc_trace(mVcdFile, grp_update_knn_fu_161_min_distances_V_address1, "grp_update_knn_fu_161_min_distances_V_address1");
    sc_trace(mVcdFile, grp_update_knn_fu_161_min_distances_V_ce1, "grp_update_knn_fu_161_min_distances_V_ce1");
    sc_trace(mVcdFile, grp_update_knn_fu_161_min_distances_V_we1, "grp_update_knn_fu_161_min_distances_V_we1");
    sc_trace(mVcdFile, grp_update_knn_fu_161_min_distances_V_d1, "grp_update_knn_fu_161_min_distances_V_d1");
    sc_trace(mVcdFile, i_reg_100, "i_reg_100");
    sc_trace(mVcdFile, exitcond3_fu_195_p2, "exitcond3_fu_195_p2");
    sc_trace(mVcdFile, k_reg_111, "k_reg_111");
    sc_trace(mVcdFile, i4_reg_122, "i4_reg_122");
    sc_trace(mVcdFile, j_reg_133, "j_reg_133");
    sc_trace(mVcdFile, exitcond2_fu_225_p2, "exitcond2_fu_225_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, phi_mul_reg_145, "phi_mul_reg_145");
    sc_trace(mVcdFile, ap_reg_grp_knn_vote_fu_156_ap_start, "ap_reg_grp_knn_vote_fu_156_ap_start");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, ap_reg_grp_update_knn_fu_161_ap_start, "ap_reg_grp_update_knn_fu_161_ap_start");
    sc_trace(mVcdFile, tmp_8_cast_fu_216_p1, "tmp_8_cast_fu_216_p1");
    sc_trace(mVcdFile, tmp_6_fu_260_p1, "tmp_6_fu_260_p1");
    sc_trace(mVcdFile, tmp_fu_183_p3, "tmp_fu_183_p3");
    sc_trace(mVcdFile, tmp_cast_fu_207_p1, "tmp_cast_fu_207_p1");
    sc_trace(mVcdFile, tmp_8_fu_211_p2, "tmp_8_fu_211_p2");
    sc_trace(mVcdFile, tmp_5_fu_255_p2, "tmp_5_fu_255_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
    mHdltvinHandle.open("digitrec.hdltvin.dat");
    mHdltvoutHandle.open("digitrec.hdltvout.dat");
}

digitrec::~digitrec() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete training_data_V_U;
    delete knn_set_V_U;
    delete grp_knn_vote_fu_156;
    delete grp_update_knn_fu_161;
}

void digitrec::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_reg_grp_knn_vote_fu_156_ap_start = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
             esl_seteq<1,1,1>(ap_const_lv1_1, exitcond2_fu_225_p2.read()))) {
            ap_reg_grp_knn_vote_fu_156_ap_start = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_knn_vote_fu_156_ap_ready.read())) {
            ap_reg_grp_knn_vote_fu_156_ap_start = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_reg_grp_update_knn_fu_161_ap_start = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
            ap_reg_grp_update_knn_fu_161_ap_start = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_update_knn_fu_161_ap_ready.read())) {
            ap_reg_grp_update_knn_fu_161_ap_start = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(exitcond1_fu_171_p2.read(), ap_const_lv1_1))) {
        i4_reg_122 = ap_const_lv11_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
                esl_seteq<1,1,1>(exitcond_fu_237_p2.read(), ap_const_lv1_1))) {
        i4_reg_122 = i_2_reg_299.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(exitcond3_fu_195_p2.read(), ap_const_lv1_1))) {
        i_reg_100 = i_1_reg_273.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        i_reg_100 = ap_const_lv4_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
         esl_seteq<1,1,1>(grp_update_knn_fu_161_ap_done.read(), ap_const_logic_1))) {
        j_reg_133 = j_2_reg_307.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_225_p2.read()))) {
        j_reg_133 = ap_const_lv4_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(exitcond1_fu_171_p2.read(), ap_const_lv1_0))) {
        k_reg_111 = ap_const_lv2_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond3_fu_195_p2.read()))) {
        k_reg_111 = k_1_fu_201_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
         esl_seteq<1,1,1>(grp_update_knn_fu_161_ap_done.read(), ap_const_logic_1))) {
        phi_mul_reg_145 = next_mul_reg_312.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_225_p2.read()))) {
        phi_mul_reg_145 = ap_const_lv15_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        i4_cast3_reg_291 = i4_cast3_fu_221_p1.read();
        i_2_reg_299 = i_2_fu_231_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        i_1_reg_273 = i_1_fu_177_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        j_2_reg_307 = j_2_fu_243_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_237_p2.read()))) {
        next_mul_reg_312 = next_mul_fu_249_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(exitcond1_fu_171_p2.read(), ap_const_lv1_0))) {
        tmp_7_cast_reg_278 = tmp_7_cast_fu_191_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        training_instance_V_reg_322 = training_data_V_q0.read();
    }
}

void digitrec::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void digitrec::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void digitrec::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void digitrec::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void digitrec::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void digitrec::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void digitrec::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void digitrec::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void digitrec::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
         esl_seteq<1,1,1>(grp_knn_vote_fu_156_ap_done.read(), ap_const_logic_1))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void digitrec::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void digitrec::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
         esl_seteq<1,1,1>(grp_knn_vote_fu_156_ap_done.read(), ap_const_logic_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void digitrec::thread_ap_return() {
    ap_return = grp_knn_vote_fu_156_ap_return.read();
}

void digitrec::thread_exitcond1_fu_171_p2() {
    exitcond1_fu_171_p2 = (!i_reg_100.read().is_01() || !ap_const_lv4_A.is_01())? sc_lv<1>(): sc_lv<1>(i_reg_100.read() == ap_const_lv4_A);
}

void digitrec::thread_exitcond2_fu_225_p2() {
    exitcond2_fu_225_p2 = (!i4_reg_122.read().is_01() || !ap_const_lv11_708.is_01())? sc_lv<1>(): sc_lv<1>(i4_reg_122.read() == ap_const_lv11_708);
}

void digitrec::thread_exitcond3_fu_195_p2() {
    exitcond3_fu_195_p2 = (!k_reg_111.read().is_01() || !ap_const_lv2_2.is_01())? sc_lv<1>(): sc_lv<1>(k_reg_111.read() == ap_const_lv2_2);
}

void digitrec::thread_exitcond_fu_237_p2() {
    exitcond_fu_237_p2 = (!j_reg_133.read().is_01() || !ap_const_lv4_A.is_01())? sc_lv<1>(): sc_lv<1>(j_reg_133.read() == ap_const_lv4_A);
}

void digitrec::thread_grp_knn_vote_fu_156_ap_start() {
    grp_knn_vote_fu_156_ap_start = ap_reg_grp_knn_vote_fu_156_ap_start.read();
}

void digitrec::thread_grp_update_knn_fu_161_ap_start() {
    grp_update_knn_fu_161_ap_start = ap_reg_grp_update_knn_fu_161_ap_start.read();
}

void digitrec::thread_i4_cast3_fu_221_p1() {
    i4_cast3_fu_221_p1 = esl_zext<15,11>(i4_reg_122.read());
}

void digitrec::thread_i_1_fu_177_p2() {
    i_1_fu_177_p2 = (!i_reg_100.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(i_reg_100.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void digitrec::thread_i_2_fu_231_p2() {
    i_2_fu_231_p2 = (!i4_reg_122.read().is_01() || !ap_const_lv11_1.is_01())? sc_lv<11>(): (sc_biguint<11>(i4_reg_122.read()) + sc_biguint<11>(ap_const_lv11_1));
}

void digitrec::thread_j_2_fu_243_p2() {
    j_2_fu_243_p2 = (!j_reg_133.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(j_reg_133.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void digitrec::thread_k_1_fu_201_p2() {
    k_1_fu_201_p2 = (!k_reg_111.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(k_reg_111.read()) + sc_biguint<2>(ap_const_lv2_1));
}

void digitrec::thread_knn_set_V_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        knn_set_V_address0 =  (sc_lv<5>) (tmp_8_cast_fu_216_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        knn_set_V_address0 = grp_update_knn_fu_161_min_distances_V_address0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        knn_set_V_address0 = grp_knn_vote_fu_156_knn_set_V_address0.read();
    } else {
        knn_set_V_address0 = "XXXXX";
    }
}

void digitrec::thread_knn_set_V_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        knn_set_V_ce0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        knn_set_V_ce0 = grp_update_knn_fu_161_min_distances_V_ce0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        knn_set_V_ce0 = grp_knn_vote_fu_156_knn_set_V_ce0.read();
    } else {
        knn_set_V_ce0 = ap_const_logic_0;
    }
}

void digitrec::thread_knn_set_V_ce1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        knn_set_V_ce1 = grp_update_knn_fu_161_min_distances_V_ce1.read();
    } else {
        knn_set_V_ce1 = ap_const_logic_0;
    }
}

void digitrec::thread_knn_set_V_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        knn_set_V_d0 = ap_const_lv6_32;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        knn_set_V_d0 = grp_update_knn_fu_161_min_distances_V_d0.read();
    } else {
        knn_set_V_d0 =  (sc_lv<6>) ("XXXXXX");
    }
}

void digitrec::thread_knn_set_V_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond3_fu_195_p2.read()))) {
        knn_set_V_we0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        knn_set_V_we0 = grp_update_knn_fu_161_min_distances_V_we0.read();
    } else {
        knn_set_V_we0 = ap_const_logic_0;
    }
}

void digitrec::thread_knn_set_V_we1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        knn_set_V_we1 = grp_update_knn_fu_161_min_distances_V_we1.read();
    } else {
        knn_set_V_we1 = ap_const_logic_0;
    }
}

void digitrec::thread_next_mul_fu_249_p2() {
    next_mul_fu_249_p2 = (!phi_mul_reg_145.read().is_01() || !ap_const_lv15_708.is_01())? sc_lv<15>(): (sc_biguint<15>(phi_mul_reg_145.read()) + sc_biguint<15>(ap_const_lv15_708));
}

void digitrec::thread_tmp_5_fu_255_p2() {
    tmp_5_fu_255_p2 = (!i4_cast3_reg_291.read().is_01() || !phi_mul_reg_145.read().is_01())? sc_lv<15>(): (sc_biguint<15>(i4_cast3_reg_291.read()) + sc_biguint<15>(phi_mul_reg_145.read()));
}

void digitrec::thread_tmp_6_fu_260_p1() {
    tmp_6_fu_260_p1 = esl_zext<64,15>(tmp_5_fu_255_p2.read());
}

void digitrec::thread_tmp_7_cast_fu_191_p1() {
    tmp_7_cast_fu_191_p1 = esl_zext<6,5>(tmp_fu_183_p3.read());
}

void digitrec::thread_tmp_8_cast_fu_216_p1() {
    tmp_8_cast_fu_216_p1 = esl_zext<64,6>(tmp_8_fu_211_p2.read());
}

void digitrec::thread_tmp_8_fu_211_p2() {
    tmp_8_fu_211_p2 = (!tmp_7_cast_reg_278.read().is_01() || !tmp_cast_fu_207_p1.read().is_01())? sc_lv<6>(): (sc_biguint<6>(tmp_7_cast_reg_278.read()) + sc_biguint<6>(tmp_cast_fu_207_p1.read()));
}

void digitrec::thread_tmp_cast_fu_207_p1() {
    tmp_cast_fu_207_p1 = esl_zext<6,2>(k_reg_111.read());
}

void digitrec::thread_tmp_fu_183_p3() {
    tmp_fu_183_p3 = esl_concat<4,1>(i_reg_100.read(), ap_const_lv1_0);
}

void digitrec::thread_training_data_V_address0() {
    training_data_V_address0 =  (sc_lv<15>) (tmp_6_fu_260_p1.read());
}

void digitrec::thread_training_data_V_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        training_data_V_ce0 = ap_const_logic_1;
    } else {
        training_data_V_ce0 = ap_const_logic_0;
    }
}

void digitrec::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(exitcond1_fu_171_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(exitcond3_fu_195_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_225_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state5;
            } else {
                ap_NS_fsm = ap_ST_fsm_state8;
            }
            break;
        case 16 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(exitcond_fu_237_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else {
                ap_NS_fsm = ap_ST_fsm_state6;
            }
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && esl_seteq<1,1,1>(grp_update_knn_fu_161_ap_done.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state5;
            } else {
                ap_NS_fsm = ap_ST_fsm_state7;
            }
            break;
        case 128 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && esl_seteq<1,1,1>(grp_knn_vote_fu_156_ap_done.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state8;
            }
            break;
        default : 
            ap_NS_fsm =  (sc_lv<8>) ("XXXXXXXX");
            break;
    }
}

void digitrec::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"input_V\" :  \"" << input_V.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_return\" :  \"" << ap_return.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

