// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.4
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _knn_vote_HH_
#define _knn_vote_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct knn_vote : public sc_module {
    // Port declarations 10
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<4> > knn_set_0_V_address0;
    sc_out< sc_logic > knn_set_0_V_ce0;
    sc_in< sc_lv<5> > knn_set_0_V_q0;
    sc_out< sc_lv<4> > ap_return;


    // Module declarations
    knn_vote(sc_module_name name);
    SC_HAS_PROCESS(knn_vote);

    ~knn_vote();

    sc_trace_file* mVcdFile;

    sc_signal< sc_lv<3> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<32> > digit_recognized_cas_fu_65_p1;
    sc_signal< sc_lv<32> > digit_recognized_cas_reg_119;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<4> > i_fu_75_p2;
    sc_signal< sc_lv<4> > i_reg_127;
    sc_signal< sc_lv<1> > exitcond7_fu_69_p2;
    sc_signal< sc_lv<32> > sum_distances_1_min_s_fu_104_p3;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<32> > i_0_digit_recognized_fu_112_p3;
    sc_signal< sc_lv<32> > min_sum_distances_reg_30;
    sc_signal< sc_lv<32> > val_assign_reg_42;
    sc_signal< sc_lv<4> > digit_recognized_reg_54;
    sc_signal< sc_lv<64> > tmp_s_fu_81_p1;
    sc_signal< sc_lv<6> > extLd_fu_90_p1;
    sc_signal< sc_lv<32> > tmp_3_fu_94_p1;
    sc_signal< sc_lv<1> > tmp_1_fu_98_p2;
    sc_signal< sc_lv<4> > tmp_fu_86_p1;
    sc_signal< sc_lv<4> > ap_return_preg;
    sc_signal< sc_lv<3> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<3> ap_ST_fsm_state1;
    static const sc_lv<3> ap_ST_fsm_state2;
    static const sc_lv<3> ap_ST_fsm_state3;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_32;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<4> ap_const_lv4_A;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<1> ap_const_lv1_1;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_return();
    void thread_digit_recognized_cas_fu_65_p1();
    void thread_exitcond7_fu_69_p2();
    void thread_extLd_fu_90_p1();
    void thread_i_0_digit_recognized_fu_112_p3();
    void thread_i_fu_75_p2();
    void thread_knn_set_0_V_address0();
    void thread_knn_set_0_V_ce0();
    void thread_sum_distances_1_min_s_fu_104_p3();
    void thread_tmp_1_fu_98_p2();
    void thread_tmp_3_fu_94_p1();
    void thread_tmp_fu_86_p1();
    void thread_tmp_s_fu_81_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
